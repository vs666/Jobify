[{"/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/index.js":"1","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/App.js":"2","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/reportWebVitals.js":"3","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/NavB/Navigation.js":"4","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/LoginPage/Login.js":"5","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/Dashboard/Dash.js":"6","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/Dashboard/DashR.js":"7","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/SignUp/SignUp.js":"8","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/SignUp/FSign.js":"9","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/LoginPage/Logout.js":"10","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/ListJobs/LJobs.js":"11","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/ListJobs/ShowList.js":"12","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/SearchPane/Search.js":"13","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/Dashboard/ApplyJob.js":"14","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/Upload/UFile.js":"15","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/ListJobs/PopDetails.js":"16","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/ListJobs/Accepted.js":"17"},{"size":1267,"mtime":1610529825357,"results":"18","hashOfConfig":"19"},{"size":2245,"mtime":1611336992152,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610141483544,"results":"21","hashOfConfig":"19"},{"size":1781,"mtime":1611561179242,"results":"22","hashOfConfig":"19"},{"size":4183,"mtime":1610609811946,"results":"23","hashOfConfig":"19"},{"size":11738,"mtime":1611591487900,"results":"24","hashOfConfig":"19"},{"size":12012,"mtime":1610386357752,"results":"25","hashOfConfig":"19"},{"size":16046,"mtime":1611587749643,"results":"26","hashOfConfig":"19"},{"size":19852,"mtime":1611496824589,"results":"27","hashOfConfig":"19"},{"size":1651,"mtime":1610540838188,"results":"28","hashOfConfig":"19"},{"size":10355,"mtime":1611591823645,"results":"29","hashOfConfig":"19"},{"size":22735,"mtime":1611590749616,"results":"30","hashOfConfig":"19"},{"size":17786,"mtime":1611585814453,"results":"31","hashOfConfig":"19"},{"size":5830,"mtime":1610802171966,"results":"32","hashOfConfig":"19"},{"size":2258,"mtime":1611155518244,"results":"33","hashOfConfig":"19"},{"size":627,"mtime":1611076637827,"results":"34","hashOfConfig":"19"},{"size":5587,"mtime":1611585915410,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1m7va00",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"38"},"/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/index.js",[],["88","89"],"/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/App.js",["90","91"],"import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport './App.css';\n\nimport SignUp from './Components/SignUp/SignUp';\nimport Dash from './Components/Dashboard/Dash';\nimport Login from './Components/LoginPage/Login';\nimport Navigation from './Components/NavB/Navigation';\nimport FSign from './Components/SignUp/FSign';\nimport Logout from './Components/LoginPage/Logout';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    };\n  }\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err))\n    console.log(this.state.data);\n  }\n\n  callBackendAPI = async () => {\n    const response = await fetch('localhost:5000/');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      console.log(\"Server is down.\")\n      throw Error(body.message)\n    }\n    else {\n      console.log(\"Server is up.\")\n    }\n    return body;\n  };\n\n  logoutFunc = () => {\n    // localStorage.removeItem('hash');\n    localStorage.removeItem('hash')\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <header className=\"App-header\">\n          <BrowserRouter>\n            <Route exact path=\"/\" >\n            </Route>\n\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dash />\n            </Route>\n            <Route path=\"/edit/dashboard\">\n              <SignUp hash={localStorage.getItem('hash')} type={localStorage.getItem('type')}/>\n            </Route>\n            <Route path=\"/editDetails\">\n              <SignUp email={''} userhash={localStorage.getItem('hash')} />\n            </Route>\n            <Route path=\"/signUp\">\n              <FSign userhash={localStorage.getItem('hash')} />\n            </Route>\n            <Route path=\"/logout\">\n              <Logout />\n            </Route>\n            <Route path=\"/\">\n            </Route>\n          </BrowserRouter>\n        </header>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/reportWebVitals.js",[],["92","93"],"/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/NavB/Navigation.js",["94"],"import React from 'react';\nimport { Nav, Navbar, NavDropdown, Card } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport './Nav.css';\n\nconst Styles = styled.div`\n    .navbar {\n        background-color : rgb(20,20,4  0);\n    }\n    \n    .navbar-brand, .navbar-nav, .nav-link{\n        color : #bbb;\n        $: hover{\n            color: white;\n        }\n    }\n`;\n\nconst Navigation = () => {\n    return (\n        <Styles>\n                <Navbar raised={true} expand=\"lg\" className=\"navbar a\" fixed=\"top\" style={{backgroundColor: 'rgba(0,0,0,0.3)'}}>\n                    {/* <Navbar.Brand href=\"/\"><img src={require(\"\")} alt=\"PC-Cart\" height=\"64\" width=\"64\" /></Navbar.Brand> */}\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar -nav\" className=\"navbar a\">\n                        <Nav className=\"mr-auto\" style={{ color: '#fff' }}>\n                            <Nav.Link href=\"/\" style={{ color: '#fff' }}>Home</Nav.Link>\n                            <Nav.Link href=\"/signup\" style={{ color: '#fff' }}>Sign Up</Nav.Link>\n                            <Nav.Link href=\"/login\" style={{ color: '#fff' }}>Login</Nav.Link>\n                            <Nav.Link href=\"/logout\" style={{ color: '#fff' }}>Logout</Nav.Link>\n                            <NavDropdown title={\"Options\"} style={{ color: '#fff' }} id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item href=\"/dashboard\">Dashboard</NavDropdown.Item>\n                            </NavDropdown>\n                        </Nav>\n                    </Navbar.Collapse>\n                    {/* <SearchBar style={{ alignItems: `right` }} /> */}\n                </Navbar>\n            </Styles >\n    );\n}\n\nexport default Navigation;","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/LoginPage/Login.js",["95","96","97","98","99","100"],"import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Card } from 'react-bootstrap';\nimport axios from 'axios';\nexport default class Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            userhash: localStorage.getItem('hash')\n        }\n    }\n\n\n\n\n    handleChange = (event) => {\n        const target = event.target;\n        const field = target.name;\n        const value = target.value;\n\n\n\n        this.setState({\n            [field]: value\n        });\n    }\n\n    render() {\n        var login = (event) => {\n            event.preventDefault();\n            var data = { hash: (localStorage.getItem('hash')==undefined || localStorage.getItem('hash')==null?'Guest':localStorage.getItem('hash')), email: this.state.email, password: this.state.password };\n            console.log(data);\n\n            // Server side communication here\n            console.log(data);\n            axios.post('http://localhost:5000/login', data)\n                .then((response) => {\n                    if (response.data.stat == 'Success') {\n                        console.log(response.data);\n                        localStorage.setItem('hash', response.data.userhash);\n                        localStorage.setItem('type', response.data.usertype);\n                        localStorage.setItem('usertype', response.data.usertype);\n                        alert('Login Successful');\n                        // window.location.href = '/dashboard';\n                    }\n                    else {\n                        alert('Login Failed');\n                    }\n                })\n                .catch((error) => {\n                    alert(error.message);\n                })\n\n        }\n        return (\n            <div>\n                <div className=\"container\" style={{ marginTop: '10%', width: '40%', height: '20%', marginLeft: '60%' }}>\n                    <Card style={{ width: '18rem', backgroundColor: '#078' }}>\n                        <Card.Body>\n\n                            <Form style={{ fontSize: '80%' }} method=\"post\" onSubmit={login}>\n                                <Form.Group controlId=\"formBasicEmail\" >\n                                    <Form.Label>Email address</Form.Label>\n                                    <Form.Control type=\"email\" validations={['required', 'isEmail']} name=\"email\" id=\"email\" value={this.state.email} onChange={\n                                        (event) => {\n                                            this.setState({ email: event.target.value });\n                                        }\n                                    } placeholder=\"Enter email\" />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Password\"\n                                        type=\"password\"\n                                        validations={['required']}\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={\n                                            (event) => {\n                                                this.setState({\n                                                    password: event.target.value\n                                                });\n                                            }\n                                        }\n                                        id=\"password\"\n                                        placeholder=\"Enter your password.\"\n                                    />\n                                </Form.Group>\n                                <Button variant=\"primary\" type=\"submit\" >\n                                    Submit\n                                </Button>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n\n        );\n    }\n}\n","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/Dashboard/Dash.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport Parser from 'html-react-parser';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, Card, Tabs, Tab, ListGroup, ListGroupItem, Image, Text, InputGroup, Jumbotron, Container, FormControl, Table, Row, Col, Dropdown, DropdownButton } from 'react-bootstrap';\nimport './Dash.css';\nimport ShowList from './../ListJobs/ShowList';\nimport ListJobs from './../ListJobs/LJobs';\nimport SearchBox from './../SearchPane/Search';\nimport ApplyJob from './ApplyJob';\nimport { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider';\nimport Uppy from './../Upload/UFile';\nimport AcceptedList from './../ListJobs/Accepted';\n\nexport default class Dash extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: 'Guest',\n            authHash: '',\n            description: 'A small Description of yourself',\n            table: '<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>',\n            jobtype: 'Any Type',\n            searchQuery: '',\n            duration: 1000,\n            salaryUl: 10000,\n            salaryLl: 0,\n            details: { name: 'Guest User', email: 'noreply@example.com', college: 'IIIT Hyderabad', college_start: 'July 2019', college_end: '', skills: 'C, C++, ReactJs, NodeJs, Express, Python' },  // Details Dictionary\n        }\n\n        this.tabData = []\n    }\n\n    componentDidMount() {\n        this.ff1()\n    }\n    async ff1() {\n        console.log('here', localStorage.getItem('hash'))\n        const response = await axios.get('http://localhost:5000/attainData', {\n            params: {\n                hash: localStorage.getItem('hash'),\n                type: localStorage.getItem('type'),\n            }\n        })\n        console.log('rd', response.data)\n        if (response.data != null && response.data.Hash != 'Guest') {\n            this.setState({\n                username: response.data.Name,\n                description: response.data.Bio,\n                details: response.data\n            });\n        }\n        if (localStorage.getItem('type') == 'Applicant' && localStorage.getItem('hash') != null && localStorage.getItem('hash') != undefined) {\n            var n = '';\n            for (let x = 0; x < this.state.details['College'].length; x++) {\n                n = n + ' ' + this.state.details['College'][x]['Name'] + ' (from  ' + this.state.details['College'][x]['startYear'] + ' to ' + this.state.details['College'][x]['endYear'] + ')</br>'\n            }\n            document.getElementById('study').innerHTML = n;\n            n = 'Skills : ';\n            for (let x = 0; x < this.state.details['Skills'].length; x++) {\n                n = n + (x == 0 ? ' ' : ',') + this.state.details['Skills'][x];\n            }\n\n            document.getElementById('skillid').innerHTML = n;\n        }\n    }\n\n\n    login = (event) => {\n\n        event.preventDefault();\n\n        const email = this.state.email;\n        const pass = this.state.password;\n        console.log(email, pass);\n        var data = { username: email.toString(), password: pass.toString() };\n        console.log(data);\n\n        // Server side communication here\n\n        console.log(email, pass);\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const field = target.name;\n        const value = target.value\n\n\n\n        this.setState({\n            [field]: value\n        });\n    }\n    handleSearchChange = (event) => {\n        const target = event.target;\n        const value = target.value\n\n        this.setState({\n            searchQuery: value\n        });\n    }\n    searchField() {\n        console.log('Searched Query is : ', this.state.searchQuery)\n\n        // API Call and update table element here\n    }\n\n    render() {\n        var self = this;\n        var updateTable = (event) => {\n            var tm;\n            event.preventDefault()\n            var data = {\n                Hash: localStorage.getItem('hash')\n            }\n            axios.post('http://localhost:5000/showApplications', data)\n                .then((response) => {\n                    if (response.data.stat == \"Success\") {\n                        // do all work here :sad\n                        var ihs = '';\n                        for (let x = 0; x < response.data.dada.length; x++) {\n                            ihs = ihs + '<tr><td>' + (x + 1) + '</td><td>' + response.data.dada[x]['ud']['Title'] + '</td><td>' + response.data.dada[x]['ud']['Recruiter']['Name'] + '</td><td>' + response.data.dada[x]['ud']['Votes']['Rating']/(response.data.dada[x]['ud']['Votes']['count']==0?1:response.data.dada[x]['ud']['Votes']['count']) + '</td><td>' + response.data.dada[x]['ud']['Salary'] + '</td><td>' + response.data.dada[x]['ud']['Duration'] + \" months\" + '</td><td>' + (response.data.dada[x]['ud']['Deadline'] + \"\").substring(0, 10) + '</td><td>' + response.data.dada[x]['jd']['Status'] + '</td></tr>'\n                        }\n                        document.getElementById('app-data').innerHTML = ihs;\n\n                    }\n                    else {\n                    }\n                })\n                .catch((error) => {\n                    console.log(error, 'Error');\n                });\n        }\n\n        if (localStorage.getItem('type') == 'Applicant') {\n\n            return (\n                <div style={{ paddingTop: '3vh', paddingRight: '2vh' }}>\n                    <p className=\"top-tag\" style={{ textAlign: 'right' }}>{this.state.username}</p>\n                    <div>\n                        <Jumbotron style={{ marginLeft: '5vh', marginRight: '5vh', color: 'black', backgroundColor: 'rgba(190,190,255,0.5)' }}>\n                            <Col xs={6} md={4}>\n                                <Image src={\"http://localhost:5000/dp/?Hash=\"+localStorage.getItem('hash')} style={{width:'25vh',height:'25vh', marginLeft:'50%'}} rounded />\n                            </Col>\n                            <h1>Hello, {this.state.username}!</h1>\n                            <p>\n                                {this.state.description}\n                            </p>\n                            <p>\n                                <Link to=\"/edit/dashboard\" style={{ color: '#055' }}>Edit Details</Link>\n                            </p>\n                        </Jumbotron>\n\n                    </div>\n                    <Tabs defaultActiveKey=\"details\" id=\"uncontrolled-tab-example\" >\n                        <Tab class=\"tabcus\" eventKey=\"details\" title=\"Details\" >\n\n                            <div style={{ textAlign: 'left', backgroundColor: 'rgba(0,0,0,0.3', paddingLeft: '5vh', paddingTop: '4vh' }}>\n                                <p>Name : {this.state.details['Name']}</p>\n                                {/* <p>Email : {this.state.details['EmailID']}</p> */}\n                                <p>Institution Name : </p>\n                                <p id=\"study\"></p>\n                                <p id=\"skillid\">Skills : {this.state.details['Skills']}</p>\n\n                                <div style={{ fontSize: 'smaller', marginLeft: '40%', marginTop: '10%' }}>\n                                    <p style={{ marginLeft: '15%' }}>Image/CV upload</p>\n                                    <Uppy></Uppy>\n                                </div>\n                                {/* Code for image here */}\n\n                            </div>\n\n                        </Tab>\n                        <Tab class=\"tabcus\" eventKey=\"searchJobs\" title=\"Search for Jobs\" >\n                            <SearchBox />\n                            {/* <ApplyJob /> */}\n                        </Tab>\n                        <Tab class=\"tabcus\" eventKey=\"contact\" title=\"My Applications\">\n                            <Jumbotron style={{ backgroundColor: 'rgba(0,0,0,0.3' }}>\n                                <p>My Applications</p>\n                                <Button type=\"success\" onClick={updateTable}>Reload</Button>\n                                <div style={{ paddingTop: '3%' }}>\n                                    <Table striped bordered hover variant=\"dark\" style={{ backgroundColor: 'rgba(50,50,50,0.6' }}>\n                                        <thead>\n                                            <tr>\n                                                {/*Add onclick sort function*/}\n                                                <th>#</th>\n                                                <th>Job Title</th>\n                                                <th>Recruiter</th>\n                                                <th>Rating</th>\n                                                <th>Salary</th>\n                                                <th>Duration</th>\n                                                <th>Deadline of Application</th>\n                                                <th>Status</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody id=\"app-data\">\n                                            {Parser(this.state.table)}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </Jumbotron>\n                        </Tab>\n                    </Tabs>\n                </div >\n\n            );\n        }\n        else if (localStorage.getItem('type') == 'Recruiter') {\n            return (\n                <div style={{ paddingTop: '3vh', paddingRight: '2vh' }}>\n                    <p className=\"top-tag\" style={{ textAlign: 'right' }}>{this.state.username}</p>\n                    <div>\n                        <Jumbotron style={{ marginLeft: '5vh', marginRight: '5vh', color: 'black', backgroundColor: 'rgba(190,190,255,0.5)' }}>\n                            <h1>Hello, {this.state.username}!</h1>\n                            <p>\n                                {this.state.description}\n                            </p>\n                            <p>\n                                <Link to=\"/edit/dashboard\" style={{ color: '#055' }}>Edit Details</Link>\n                            </p>\n                        </Jumbotron>\n\n                    </div>\n                    <Tabs defaultActiveKey=\"details\" id=\"uncontrolled-tab-example\" >\n                        <Tab class=\"tabcus\" eventKey=\"details\" title=\"Details\" >\n\n                            <div style={{ textAlign: 'left', backgroundColor: 'rgba(0,0,0,0.3', paddingLeft: '5vh', paddingTop: '4vh' }}>\n                                <p>Name : {this.state.details['Name']}</p>\n                                <p>Email : {this.state.details['Email']}</p>\n                                <p>Email : {this.state.details['Contact']}</p>\n                                {/* Code for image here */}\n                            </div>\n                        </Tab>\n                        <Tab class=\"tabcus\" eventKey=\"postJobs\" title=\"Post Jobs\">\n                            <Container>\n                                <ListJobs />\n                            </Container>\n                        </Tab>\n                        <Tab class=\"tabcus\" eventKey=\"showPostings\" title=\"My Postings\">\n                            <Container>\n                                <ShowList />\n                            </Container>\n                        </Tab>\n                        <Tab class=\"tabcus\" eventKey=\"showSelected\" title=\"Accepted Applicants\">\n                            <AcceptedList/>\n                        </Tab> \n                    </Tabs>\n                </div >\n\n            );\n\n        }\n        else {\n            // do nothing\n        }\n    }\n}\n","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/Dashboard/DashR.js",["124","125","126","127","128","129","130","131"],"import React, { Component } from 'react';\nimport Parser from 'html-react-parser';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button, Form, Card, Tabs, Tab, ListGroup, ListGroupItem, Image, Text, InputGroup, Jumbotron, Container, FormControl, Table, Row, Col, Dropdown, DropdownButton } from 'react-bootstrap';\nimport './Dash.css';\nexport default class RDash extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: 'Guest',\n            authHash: '',\n            description: 'A small Description of the Company',\n            details: { name: 'Guest Recruiter', email: 'noreply@example.com', contact:'+0 394-234-3382' },  // Details Dictionary\n            table: '<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>',\n            jobtype: 'Any Type',\n            searchQuery: '',\n            duration: 1000,\n            salaryUl: 10000,\n            salaryLl: 0\n        }\n\n        // this.state.details = loadDetailsFromServer\n    }\n\n\n\n    login = (event) => {\n        if (this.state.userhash != 'Guest') {\n            // update rest of information\n            alert('Please sign in first');\n\n            axios.post('/signIn/getData', { email: this.state.email, userhash: this.state.userhash, usertype: this.state.usertype })\n                .then((res) => {\n\n                })\n        }\n        else {\n            console.log('Current user is guest');\n        }\n\n        event.preventDefault();\n\n        const email = this.state.email;\n        const pass = this.state.password;\n        console.log(email, pass);\n        var data = { username: email.toString(), password: pass.toString() };\n        console.log(data);\n\n        // Server side communication here\n\n        console.log(email, pass);\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const field = target.name;\n        const value = target.value\n\n\n\n        this.setState({\n            [field]: value\n        });\n    }\n    handleSearchChange = (event) => {\n        const target = event.target;\n        const value = target.value\n\n        this.setState({\n            searchQuery: value\n        });\n    }\n    searchField() {\n        console.log('Searched Query is : ', this.state.searchQuery)\n\n        // API Call and update table element here\n    }\n    updateTable() {\n        console.log('Updating Applications Table')\n    }\n\n    render() {\n        return (\n            <div style={{ paddingTop: '3vh', paddingRight: '2vh' }}>\n                <p className=\"top-tag\" style={{ textAlign: 'right' }}>{this.state.username}</p>\n                <div>\n                    <Jumbotron style={{ marginLeft: '5vh', marginRight: '5vh', color: 'black', backgroundColor: 'rgba(190,190,255,0.5)' }}>\n                        <h1>Hello, {this.state.username}!</h1>\n                        <p>\n                            {this.state.description}\n                        </p>\n                        <p>\n                            <Link to=\"/editDetails\" style={{ color: '#055' }}>Edit Details</Link>\n                        </p>\n                    </Jumbotron>\n\n                </div>\n                <Tabs defaultActiveKey=\"details\" id=\"uncontrolled-tab-example\" >\n                    <Tab class=\"tabcus\" eventKey=\"details\" title=\"Details\" >\n\n                        <div style={{ textAlign: 'left', backgroundColor: 'rgba(0,0,0,0.3', paddingLeft: '5vh', paddingTop: '4vh' }}>\n                            <p>Name : {this.state.details['name']}</p>\n                            <p>Email : {this.state.details['email']}</p>\n                            <p>Institution Name : {this.state.details['college']}</p>\n                            <p>Start Year : {this.state.details['college_start']}</p>\n                            <p>Graduation Year : {this.state.details['college_end']}</p>\n                            <p>Skills : {this.state.details['skills']}</p>\n                            <a href={this.state.details['resumeLink']}>Resume</a>   {/*implement this part */}\n                            {/* Code for image here */}\n\n                        </div>\n\n                    </Tab>\n                    <Tab class=\"tabcus\" eventKey=\"searchJobs\" title=\"Search for Jobs\">\n                        <Container>\n                            <Jumbotron style={{ marginLeft: '5vh', marginRight: '5vh', color: '#055', backgroundColor: 'rgba(110,200,200,0.2)' }}>\n                                <p style={{ fontFamily: 'Helvetica Neue', fontWeight: '800', fontSize: '5vh', color: 'black' }}>Searh for Jobs</p>\n                                <Form inline onSubmit={this.searchField}>\n                                    <FormControl type=\"text\" placeholder=\"Search\" value={this.state.searchQuery} onChange={this.handleSearchChange} className=\"mr-sm-2\" />\n                                    <DropdownButton\n                                        as={InputGroup.Prepend}\n                                        variant=\"success\"\n                                        title={this.state.jobtype}\n                                        id=\"input-group-dropdown-1\"\n                                        style={{ padding: '1vh' }}\n                                    >\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ jobtype: 'Full-Time' }) }}>Full-Time</Button></Dropdown.Item>\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ jobtype: 'Part-Time' }) }}>Part-Time</Button></Dropdown.Item>\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ jobtype: 'WorkFromHome' }) }}>WorkFromHome</Button></Dropdown.Item>\n                                        <Dropdown.Divider />\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ jobtype: 'All Types' }) }}>Any Type</Button></Dropdown.Item>\n                                    </DropdownButton>\n                                    <DropdownButton\n                                        as={InputGroup.Prepend}\n                                        variant=\"success\"\n                                        title={((this.state.duration > 7) ? 'Duration invariant' : this.state.duration + ' months')}\n                                        id=\"input-group-dropdown-1\"\n                                        style={{ padding: '1vh' }}\n                                    >\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ duration: 1 }) }}>1 month</Button></Dropdown.Item>\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ duration: 2 }) }}>2 months</Button></Dropdown.Item>\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ duration: 3 }) }}>3 months</Button></Dropdown.Item>\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ duration: 3 }) }}>4 months</Button></Dropdown.Item>\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ duration: 3 }) }}>5 months</Button></Dropdown.Item>\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ duration: 3 }) }}>6 months</Button></Dropdown.Item>\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ duration: 3 }) }}>7 months</Button></Dropdown.Item>\n                                        <Dropdown.Divider />\n                                        <Dropdown.Item><Button variant=\"light\" size=\"lg\" onClick={() => { this.setState({ duration: 1000 }) }}>Infinite</Button></Dropdown.Item>\n                                    </DropdownButton>\n                                    <InputGroup className=\"mb-3\" >\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>Max and Min Salary (in Rs.)</InputGroup.Text>\n                                        </InputGroup.Prepend>\n\n                                        <FormControl type=\"text\" placeholder=\"Max Salary\" value={this.state.salaryUl} onChange={(event) => { this.setState({ salaryUl: event.target.value }) }} />\n                                        <FormControl type=\"text\" placeholder=\"Min Salary\" value={this.state.salaryLl} onChange={(event) => { this.setState({ salaryUl: event.target.value }) }} />\n                                        <Button style={{ marginLeft: '2vh', paddingLeft: '2vh' }} variant=\"success\" type=\"submit\">GO</Button>\n                                    </InputGroup>\n\n\n                                </Form>\n                                <div style={{ paddingTop: '3%' }}>\n                                    <Table striped bordered hover variant=\"dark\" style={{ backgroundColor: 'rgba(50,50,50,0.6' }}>\n                                        <thead>\n                                            <tr>\n                                                {/*Add onclick sort function*/}\n                                                <th>#</th>\n                                                <th>Job Title</th>\n                                                <th>Recruiter</th>\n                                                <th>Rating</th>\n                                                <th>Salary</th>\n                                                <th>Duration</th>\n                                                <th>Deadline of Application</th>\n                                                <th>Apply Now</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {Parser(this.state.table)}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </Jumbotron>\n                        </Container>\n                    </Tab>\n                    <Tab class=\"tabcus\" eventKey=\"contact\" title=\"My Applications\">\n                        <Jumbotron style={{ backgroundColor:'rgba(0,0,0,0.3'}}>\n                            <p>My Applications</p>\n                            <Button type=\"success\" onClick={this.updateTable}>Reload</Button>\n                            <div style={{ paddingTop: '3%' }}>\n                                <Table striped bordered hover variant=\"dark\" style={{ backgroundColor: 'rgba(50,50,50,0.6' }}>\n                                    <thead>\n                                        <tr>\n                                            {/*Add onclick sort function*/}\n                                            <th>#</th>\n                                            <th>Job Title</th>\n                                            <th>Recruiter</th>\n                                            <th>Rating</th>\n                                            <th>Salary</th>\n                                            <th>Duration</th>\n                                            <th>Deadline of Application</th>\n                                            <th>Apply Now</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {Parser(this.state.table)}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </Jumbotron>\n\n                    </Tab>\n                </Tabs>\n            </div >\n\n        );\n    }\n}\n",["132","133"],"/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/SignUp/SignUp.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"// use of props here\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Col, Table, Jumbotron, Label, Card } from 'react-bootstrap';\n\nexport default class SignUp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // inherit all properties from parent\n            email: '',\n            hash: props.hash,\n            type: props.type,\n            name: '',\n            bio: '',\n            contact: '',\n            CollegeName: '',\n            StartYear: '',\n            EndYear: '',\n            tempSkill: '',\n            skills: ['', 'C', 'C++', 'Java', 'JavaScript', 'Python', 'Ruby', 'x86_64', 'Kotlin', 'Swift', 'Html', 'CSS', 'SQL', 'MongoDB'],\n        }\n        this.College = [] // Array\n        this.Skills = []   // Array\n\n    }\n\n    componentDidMount() {\n        this.ff1()\n    }\n    async ff1() {\n        console.log('here', localStorage.getItem('hash'))\n        const response = await axios.get('http://localhost:5000/attainData', {\n            params: {\n                hash: localStorage.getItem('hash'),\n                type: localStorage.getItem('type'),\n            }\n        })\n        console.log('rd', response.data)\n        if (response.data != null && response.data.Hash != 'Guest') {\n            if (this.state.type == 'Applicant') {\n                this.setState({\n                    name: response.data.Name,\n                    bio: response.data.Bio,\n                    email: response.data.Email,\n                });\n                this.College = response.data.College\n                this.Skills = response.data.Skills\n            }\n            else {\n                this.setState({\n                    email: response.data.Email,\n                    name: response.data.Name,\n                    bio: response.data.Bio,\n                    contact: response.data.Contact\n                })\n            }\n        }\n\n\n        if (this.state.type == 'Applicant') {\n            var inH = '';\n            for (let x = 0; x < this.College.length; x++) {\n                inH += '<tr><td>' + this.College[x]['Name'] + '</td><td>' + this.College[x]['startYear'] + '</td><td>' + (this.College[x]['endYear'] == '' ? 'Ongoing' : this.College[x]['endYear']) + '</td></tr>';\n            }\n            document.getElementById('elt-idpid').innerHTML = inH;\n            var helt = ''\n            var tad = '';\n            for (let x = 0; x < this.state.skills.length; x++) {\n                helt = helt + '<option value=\\\"' + this.state.skills[x] + '\\\">' + this.state.skills[x] + '</option>';\n            }\n            for (let x = 0; x < this.Skills.length; x++) {\n                tad = tad + (x == 0 ? '' : ',') + this.Skills[x];\n            }\n            document.getElementById('skillset').innerHTML = helt;\n            document.getElementById('printskills').innerHTML = tad;\n        }\n        console.log(this.state.details);\n    }\n\n\n    checkInt(str) {\n        console.log('String is ' + str);\n        return !isNaN(str);\n    }\n\n    // Render form based on the user type  \n    render() {\n\n        var login = (event) => {\n            event.preventDefault();\n            console.log('Done');\n            var data = {};\n            if (this.state.type == 'Applicant')\n                data = {\n                    type: this.state.type.toString(),\n                    name: this.state.name.toString(),\n                    bio: this.state.bio.toString(),\n                    college: this.College,\n                    skills: this.Skills,\n                    hash: this.state.hash\n                };\n            else {\n                data = {\n                    contact: this.state.contact,\n                    name: this.state.name,\n                    type: this.state.type,\n                    bio: this.state.bios,\n                    hash: this.state.hash\n                }\n            }\n            console.log(data)\n            axios.post('http://localhost:5000/updateUser', data)\n                .then((response) => {\n                    console.log(response);\n                    if (response.data.stat.toString() == 'Error') {\n                        alert(\"Login failed : \" + response.data.message);\n                    }\n                    else {\n                        alert(\"Update Successful. : \" + response.data.message);\n                        window.location.href = '/dashboard';\n                    }\n                })\n                .catch(err => {\n                    alert(err);\n                });\n        }\n\n        const ddSkillAdd = (event) => {\n            event.preventDefault()\n            let found = false;\n            for (let i = 0; i < this.Skills.length; i++) {\n                if (this.Skills[i] == this.state.tempSkill) {\n                    found = true;\n                }\n            }\n\n            if (!found) {\n                this.Skills.push(this.state.tempSkill);\n                var tad = '';\n                for (let i = 0; i < this.Skills.length; i++) {\n                    if (i != 0) {\n                        tad = tad + ',' + this.Skills[i]\n                    } else {\n                        tad = this.Skills[i]\n                    }\n                }\n                document.getElementById('printskills').innerHTML = tad;\n            }\n            else {\n                alert('Already Selected this skill')\n            }\n            console.log('Skills are', this.state.skills_req)\n        }\n\n        const addSkill = (event) => {\n            event.preventDefault();\n            var sk = prompt(\"Add skill\")\n            if (sk != null) {\n                let found = false;\n                for (let i = 0; i < this.skills_req.length; i++) {\n                    if (this.skills_req[i] == sk) {\n                        found = true;\n                    }\n                }\n                if (!found) {\n                    alert(sk)\n                    this.Skills.push(sk)\n                    var tad = '';\n                    for (let i = 0; i < this.skills_req.length; i++) {\n                        if (i != 0) {\n                            tad = tad + ',' + this.skills_req[i]\n                        } else {\n                            tad = this.skills_req[i]\n                        }\n                    }\n                    document.getElementById('printskills').innerHTML = tad;\n                }\n                else {\n                    alert('Already Selected this skill')\n                }\n            } else {\n                alert('Unable to add skill')\n            }\n        }\n\n        const addColl = (event) => {\n            event.preventDefault();\n            var dat = {\n                Name: this.state.CollegeName,\n                startYear: this.state.StartYear,\n                endYear: this.state.EndYear == '' ? 'Ongoing' : this.state.EndYear\n            }\n            this.College.push(dat);\n            var inH = '<tr><td>' + this.state.CollegeName + '</td><td>' + this.state.StartYear + '</td><td>' + (this.state.EndYear == '' ? 'Ongoing' : this.state.EndYear) + '</td></tr>';\n            document.getElementById('elt-idpid').innerHTML += inH;\n            this.setState({\n                CollegeName: '',\n                StartYear: '',\n                EndYear: ''\n            })\n        }\n\n        if (this.state.type == 'Applicant') {\n            return (\n                <div style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n                    <Jumbotron style={{ backgroundColor: 'rgba(0,0,0,0.3)' }}>\n                        <Form id=\"LoginForm\" method=\"post\" onSubmit={login}>\n                            <Form.Row>\n\n                                <Form.Group as={Col} controlId=\"formGridName\" onChange={(event) => { this.setState({ name: event.target.value }); }}>\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Name\" value={this.state.name} />\n                                </Form.Group>\n                                <Form.Group controlId=\"formGridCollege\" style={{ paddingRight: '2vh' }} onChange={\n                                    (event) => {\n                                        this.setState({\n                                            CollegeName: event.target.value\n                                        })\n                                    }\n                                }>\n                                    <Form.Label>College Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"College Name\" value={this.state.CollegeName} />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formGridStartYear\" style={{ marginLeft: '1vh' }} onChange={\n                                    (event) => {\n                                        this.setState({ StartYear: event.target.value })\n                                    }\n                                }>\n                                    <Form.Label>Start Year</Form.Label>\n                                    <Form.Control type=\"date\" placeholder=\"DD-MM-YYYY\" value={this.state.StartYear} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridEndYear\" style={{ marginRight: '5%' }} onChange={(event) => { this.setState({ EndYear: event.target.value }); }}>\n                                    <Form.Label>End Year</Form.Label>\n                                    <Form.Control type=\"date\" placeholder=\"DD-MM-YYYY\" value={this.state.EndYear} />\n                                </Form.Group>\n                                <Form.Group as={Col} style={{ paddingRight: '10%' }}>\n                                    <Form.Label>Add College</Form.Label>\n                                    <Button type=\"submit\" onClick={addColl}>Add College</Button>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Table striped bordered hover variant=\"dark\" responsive style={{ backgroundColor: 'rgba(50,50,50,0.6' }}>\n                                    <thead>\n                                        <tr>\n                                            {/*Add onclick sort function*/}\n                                            <th>College Name</th>\n                                            <th>Start</th>\n                                            <th>End</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"elt-idpid\" >\n                                        {/*  */}\n                                    </tbody>\n\n                                </Table>\n\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridSkills\" onChange={(event) => { this.setState({ Skills: event.target.value }); }}>\n                                    <Form.Label>Skills</Form.Label>\n                                    <p id=\"printskills\" style={{ fontSize: 'medium' }}>No Skills Selected</p>\n                                    <select id=\"skillset\" style={{ margin: '2%' }} value={this.state.tempSkill} onChange={(event) => { this.setState({ tempSkill: event.target.value }) }}>\n                                    </select>\n                                    <Button type=\"submit\" onClick={ddSkillAdd} style={{ paddingRight: '2%' }}>Add Skill</Button>\n                                    <Button type=\"submit\" onClick={addSkill} style={{ paddingRight: '2%' }}>Add Custom Skill</Button>\n                                </Form.Group>\n\n                            </Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridZip\" onChange={(event) => { this.setState({ bio: event.target.value }); }}>\n                                <Form.Label>BIO</Form.Label>\n                                <Form.Control as=\"textarea\" rows={4} value={this.state.bio} />\n                            </Form.Group>\n\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                        </Button>\n\n                        </Form>\n                    </Jumbotron>\n                </div >\n\n            );\n        }\n        else {\n            return (\n                <div style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n                    <Jumbotron style={{ backgroundColor: 'rgba(0,0,0,0.3)' }}>\n                        <Form id=\"LoginForm\" method=\"post\" onSubmit={login}>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridEmail\" onChange={(event) => {\n                                    if (this.state.isnew) {\n                                        this.setState({\n                                            email: event.target.value\n                                        });\n                                    }\n                                }}> {/** un-editable for now */}\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.email} />\n                                </Form.Group>\n\n                                {\n                                    this.state.isnew && <Form.Group as={Col} controlId=\"formGridPassword\" onChange={(event) => {\n                                        if (this.state.isnew) {\n                                            this.setState({\n                                                password: event.target.value\n                                            });\n                                        }\n                                    }}> {/** un-editable for now */}\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} />\n                                    </Form.Group>\n                                }\n\n                                <Form.Group as={Col} controlId=\"formGridName\" onChange={(event) => {\n                                    this.setState({ namesake: event.target.value });\n                                }}>\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Name\" value={this.state.namesake} />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formGridContact\" style={{ marginLeft: '1vh' }} onChange={\n                                    (event) => {\n                                        if (this.checkInt(event.target.value))\n                                            this.setState({ contact: event.target.value })\n                                        else\n                                            alert('Invalid Character. Allowed values are [0-9] only.');\n                                    }\n                                }>\n                                    <Form.Label>Contact Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"XXXX-XXX-XXX\" value={this.state.contact} />\n                                </Form.Group>\n\n                            </Form.Row>\n\n                            <Form.Group as={Col} controlId=\"formGridZip\" onChange={(event) => { this.setState({ bios: event.target.value }); }}>\n                                <Form.Label>BIO</Form.Label>\n                                <Form.Control as=\"textarea\" rows={4} value={this.state.bios} />\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                        </Form>\n                    </Jumbotron>\n                </div>\n            );\n        }\n    }\n}\n","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/SignUp/FSign.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"// use of props here\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Table, Col, Jumbotron, Label, Card } from 'react-bootstrap';\n\nexport default class FSign extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            userhash: '',\n            usertype: 'Applicant',\n            password: '',\n            namesake: '',\n            bios: '',\n            CollegeName: '',\n            StartYear: '',\n            EndYear: '',\n            Skills: '',\n            Rating: '',\n            contact: '',\n            isnew: true,\n            selection: '1',\n            skills: ['', 'C', 'C++', 'Java', 'JavaScript', 'Python', 'Ruby', 'x86_64', 'Kotlin', 'Swift', 'Html', 'CSS', 'SQL', 'MongoDB'],\n        }\n        this.skills_req = []\n        this.collegeDetails = []\n        if (localStorage.getItem('hash') != null && localStorage.getItem('hash') != 'Guest') {\n            alert('Please logout first');\n            window.location.href = '/logout';\n        }\n\n    }\n\n    componentDidMount() {\n        if (this.state.selection == '1') {\n            var helt = ''\n            for (let x = 0; x < this.state.skills.length; x++) {\n                helt = helt + '<option value=\\\"' + this.state.skills[x] + '\\\">' + this.state.skills[x] + '</option>';\n            }\n            document.getElementById('skillset').innerHTML = helt;\n        }\n    }\n    async deff() {\n\n        var helt = ''\n        for (let x = 0; x < this.state.skills.length; x++) {\n            helt = helt + '<option value=\\\"' + this.state.skills[x] + '\\\">' + this.state.skills[x] + '</option>';\n        }\n        document.getElementById('skillset').innerHTML = helt;\n\n    }\n\n    initF(selection) {\n\n\n        if (selection == null || (selection.toString() != '1' && selection.toString() != '2')) {\n            alert('Please enter a valid choice');\n            window.location.href = '/';\n        }\n        else {\n            this.state.isnew = true;\n        }\n        if (selection.toString() == '2') {\n            this.state.usertype = 'Recruiter';\n        }\n        else if (selection.toString() == '1') {\n            this.state.usertype = 'Applicant';\n        }\n    }\n\n\n\n\n    handleChange = (event) => {\n        const target = event.target;\n        const field = target.name;\n        const value = target.value\n\n\n\n        this.setState({\n            [field]: value\n        });\n    }\n\n    checkInt(str) {\n        return !isNaN(str);\n    }\n\n    // Render form based on the user type  \n    render() {\n        var login = (event) => {\n            event.preventDefault();\n            console.log('Done');\n            alert(this.state.usertype)\n            var data = {};\n            if (this.state.selection == '1')\n                data = {\n                    Email: this.state.email.toString(),\n                    Password: this.state.password.toString(),\n                    Usertype: this.state.usertype.toString(),\n                    Name: this.state.namesake.toString(),\n                    Bio: this.state.bios.toString(),\n                    College: this.collegeDetails,\n                    Skills: this.skills_req,\n                    hash: null\n                };\n            else {\n                data = {\n                    Contact: this.state.contact.toString(),\n                    Name: this.state.namesake.toString(),\n                    Email: this.state.email.toString(),\n                    Password: this.state.password.toString(),\n                    Usertype: this.state.usertype.toString(),\n                    Bio: this.state.bios.toString(),\n                    hash: null\n                }\n            }\n            console.log(data)\n            axios.post('http://localhost:5000/signIn', data)\n                .then((response) => {\n                    console.log(response);\n                    if (response.data.stat.toString() == 'Error') {\n                        alert(\"Login failed\\n\" + response.data.message);\n                    }\n                    else {\n                        alert(\"Login Successful.\\n\" + response.data.message);\n                        // session store the login data\n                        console.log(response.data)\n                        localStorage.setItem('hash', response.data.userhash.toString());\n                        localStorage.setItem('type', response.data.usertype);\n                        localStorage.setItem('usertype', response.data.usertype);\n                        // window.location.href = '/';\n                    }\n                })\n                .catch(err => {\n                    alert(err);\n                });\n        }\n\n        const ddSkillAdd = (event) => {\n            event.preventDefault()\n            let found = false;\n            for (let i = 0; i < this.skills_req.length; i++) {\n                if (this.skills_req[i] == this.state.tempSkill) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                // alert(this.state.tempSkill)\n                this.skills_req.push(this.state.tempSkill);\n                var tad = '';\n                for (let i = 0; i < this.skills_req.length; i++) {\n                    if (i != 0) {\n                        tad = tad + ',' + this.skills_req[i]\n                    } else {\n                        tad = this.skills_req[i]\n                    }\n                }\n                document.getElementById('printskills').innerHTML = tad;\n            }\n            else {\n                alert('Already Selected this skill')\n            }\n            console.log('Skills are', this.state.skills_req)\n        }\n\n        const addSkill = (event) => {\n            event.preventDefault();\n            var sk = prompt(\"Add skill\")\n            if (sk != null) {\n                let found = false;\n                for (let i = 0; i < this.skills_req.length; i++) {\n                    if (this.skills_req[i] == sk) {\n                        found = true;\n                    }\n                }\n                if (!found) {\n                    // alert(sk)\n                    this.skills_req.push(sk);\n                    var tad = '';\n                    for (let i = 0; i < this.skills_req.length; i++) {\n                        if (i != 0) {\n                            tad = tad + ',' + this.skills_req[i]\n                        } else {\n                            tad = this.skills_req[i]\n                        }\n                    }\n                    document.getElementById('printskills').innerHTML = tad;\n                }\n                else {\n                    alert('Already Selected this skill')\n                }\n            } else {\n                alert('Unable to add skill')\n            }\n        }\n\n        const addColl = (event) => {\n            event.preventDefault();\n            var dat = {\n                Name: this.state.CollegeName,\n                startYear: this.state.StartYear,\n                endYear: this.state.EndYear == '' ? 'Ongoing' : this.state.EndYear\n            }\n            this.collegeDetails.push(dat);\n            var inH = '<tr><td>' + this.state.CollegeName + '</td><td>' + this.state.StartYear + '</td><td>' + (this.state.EndYear == '' ? 'Ongoing' : this.state.EndYear) + '</td></tr>';\n            document.getElementById('elt-idpid').innerHTML += inH;\n            this.setState({\n                CollegeName: '',\n                StartYear: '',\n                EndYear: ''\n            })\n        }\n\n\n        return (\n            <div>\n\n                <select value={this.state.selection} style={{ marginTop: '10vh' }} onChange={(event) => {\n                    event.preventDefault();\n                    this.setState({\n                        selection: event.target.value\n                    });\n                    this.setState({\n                        usertype: event.target.name\n                    });\n                    if(event.target.value == \"1\"){\n                        window.location.href = '/signup';\n                    }\n                }}>\n                    <option value=\"1\" name=\"Applicant\">Applicant</option>\n                    <option value=\"2\" name=\"Recruiter\">Recruiter</option>\n                </select>\n                <div>\n\n                    {\n                        (this.state.selection == '1') && <div style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n                            <Jumbotron style={{ backgroundColor: 'rgba(0,0,0,0.3)' }}>\n                                <Form id=\"LoginForm\" method=\"post\" onSubmit={login}>\n                                    <Form.Row>\n\n                                        <Form.Group as={Col} controlId=\"formGridEmail\" onChange={\n                                            (event) => {\n                                                if (this.state.isnew) {\n                                                    this.setState({\n                                                        email: event.target.value\n                                                    })\n                                                }\n                                            }\n                                        }> {/** un-editable for now */}\n                                            <Form.Label>Email</Form.Label>\n                                            <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.email} />\n                                        </Form.Group>\n                                        {\n                                            this.state.isnew && <Form.Group as={Col} controlId=\"formGridPassword\" onChange={(event) => {\n                                                if (this.state.isnew) {\n                                                    this.setState({\n                                                        password: event.target.value\n                                                    });\n                                                }\n                                            }}> {/** un-editable for now */}\n                                                <Form.Label>Password</Form.Label>\n                                                <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} />\n                                            </Form.Group>\n                                        }\n                                        <Form.Group as={Col} controlId=\"formGridName\" onChange={(event) => { this.setState({ namesake: event.target.value }); }}>\n                                            <Form.Label>Name</Form.Label>\n                                            <Form.Control type=\"text\" placeholder=\"Name\" value={this.state.namesake} />\n                                        </Form.Group>\n                                    </Form.Row>\n\n                                    <Form.Row>\n                                        <Form.Group controlId=\"formGridCollege\" style={{ paddingRight: '2vh' }} onChange={\n                                            (event) => {\n                                                this.setState({\n                                                    CollegeName: event.target.value\n                                                })\n                                            }\n                                        }>\n                                            <Form.Label>College Name</Form.Label>\n                                            <Form.Control type=\"text\" placeholder=\"College Name\" value={this.state.CollegeName} />\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"formGridStartYear\" style={{ marginLeft: '1vh' }} onChange={\n                                            (event) => {\n                                                this.setState({ StartYear: event.target.value })\n                                            }\n                                        }>\n                                            <Form.Label>Start Year</Form.Label>\n                                            <Form.Control type=\"date\" placeholder=\"DD-MM-YYYY\" value={this.state.StartYear} />\n                                        </Form.Group>\n\n                                        <Form.Group as={Col} controlId=\"formGridEndYear\" style={{ marginRight: '5%' }} onChange={(event) => { this.setState({ EndYear: event.target.value }); }}>\n                                            <Form.Label>End Year</Form.Label>\n                                            <Form.Control type=\"date\" placeholder=\"DD-MM-YYYY\" value={this.state.EndYear} />\n                                        </Form.Group>\n                                        <Form.Group as={Col} style={{ paddingRight: '10%' }}>\n                                            <Form.Label>Add College</Form.Label>\n                                            <Button type=\"submit\" onClick={addColl}>Add College</Button>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Form.Row>\n                                        <Table striped bordered hover variant=\"dark\" responsive style={{ backgroundColor: 'rgba(50,50,50,0.6' }}>\n                                            <thead>\n                                                <tr>\n                                                    {/*Add onclick sort function*/}\n                                                    <th>College Name</th>\n                                                    <th>Start</th>\n                                                    <th>End</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"elt-idpid\" >\n                                            </tbody>\n\n                                        </Table>\n\n                                    </Form.Row>\n                                    <Form.Row>\n                                        <Form.Group as={Col} controlId=\"formGridSkills\" onChange={(event) => { this.setState({ Skills: event.target.value }); }}>\n                                            <Form.Label>Skills</Form.Label>\n                                            <p id=\"printskills\" style={{ fontSize: 'medium' }}>No Skills Selected</p>\n                                            <select id=\"skillset\" style={{ margin: '2%' }} value={this.state.tempSkill} onChange={(event) => { this.setState({ tempSkill: event.target.value }) }}>\n                                            </select>\n                                            <Button type=\"submit\" onClick={ddSkillAdd} style={{ paddingRight: '2%' }}>Add Skill</Button>\n                                            <Button type=\"submit\" onClick={addSkill} style={{ paddingRight: '2%' }}>Add Custom Skill</Button>\n                                        </Form.Group>\n\n                                    </Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridZip\" onChange={(event) => { this.setState({ bios: event.target.value }); }}>\n                                        <Form.Label>BIO</Form.Label>\n                                        <Form.Control as=\"textarea\" rows={4} value={this.state.bios} />\n                                    </Form.Group>\n\n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Submit\n                        </Button>\n\n                                </Form>\n                            </Jumbotron>\n                        </div >\n                    }\n                    {\n                        (this.state.selection != '1') && <div style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n                            <Jumbotron style={{ backgroundColor: 'rgba(0,0,0,0.3)' }}>\n                                <Form id=\"LoginForm\" method=\"post\" onSubmit={login}>\n                                    <Form.Row>\n                                        <Form.Group as={Col} controlId=\"formGridEmail\" onChange={(event) => {\n                                            if (this.state.isnew) {\n                                                this.setState({\n                                                    email: event.target.value\n                                                });\n                                            }\n                                        }}> {/** un-editable for now */}\n                                            <Form.Label>Email</Form.Label>\n                                            <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.email} />\n                                        </Form.Group>\n\n                                        {\n                                            this.state.isnew && <Form.Group as={Col} controlId=\"formGridPassword\" onChange={(event) => {\n                                                if (this.state.isnew) {\n                                                    this.setState({\n                                                        password: event.target.value\n                                                    });\n                                                }\n                                            }}> {/** un-editable for now */}\n                                                <Form.Label>Password</Form.Label>\n                                                <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} />\n                                            </Form.Group>\n                                        }\n\n                                        <Form.Group as={Col} controlId=\"formGridName\" onChange={(event) => {\n                                            this.setState({ namesake: event.target.value });\n                                        }}>\n                                            <Form.Label>Name</Form.Label>\n                                            <Form.Control type=\"text\" placeholder=\"Name\" value={this.state.namesake} />\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"formGridContact\" style={{ marginLeft: '1vh' }} onChange={\n                                            (event) => {\n                                                if (this.checkInt(event.target.value))\n                                                    this.setState({ contact: event.target.value })\n                                                else\n                                                    alert('Invalid Character. Allowed values are [0-9] only.');\n                                            }\n                                        }>\n                                            <Form.Label>Contact Number</Form.Label>\n                                            <Form.Control type=\"text\" placeholder=\"XXXX-XXX-XXX\" value={this.state.contact} />\n                                        </Form.Group>\n\n                                    </Form.Row>\n\n                                    <Form.Group as={Col} controlId=\"formGridZip\" onChange={(event) => { this.setState({ bios: event.target.value }); }}>\n                                        <Form.Label>BIO</Form.Label>\n                                        <Form.Control as=\"textarea\" rows={4} value={this.state.bios} />\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                                </Form>\n                            </Jumbotron>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/LoginPage/Logout.js",["180","181","182","183","184"],"import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Card } from 'react-bootstrap';\nimport axios from 'axios';\nexport default class Logout extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            userhash: localStorage.getItem('hash')\n        }\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const field = target.name;\n        const value = target.value;\n\n        this.setState({\n            [field]: value\n        });\n    }\n\n    render() {\n        if (this.state.userhash == null || this.state.userhash == undefined || this.state.userhash == 'Guest') {\n            alert('Please login first.');\n            window.location.href = '/';\n        }\n        var logout = (event) => {\n            event.preventDefault();\n            localStorage.removeItem('hash');\n            window.location.href = '/';\n        }\n        return (\n            <div>\n                <div className=\"container\" style={{ alignItems: 'center' }}>\n                    <Card style={{ width: '40rem', backgroundColor: 'rgba(10,10,10,0.3)', marginTop: '10vh' }}>\n                        <Card.Body>\n\n                            <Form style={{ fontSize: '80%' }} method=\"post\" onSubmit={logout}>\n                                <Button variant=\"primary\" type=\"submit\" >\n                                    Logout\n                                </Button>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n\n        );\n    }\n}\n","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/ListJobs/LJobs.js",["185","186","187","188","189","190","191","192","193","194"],"// use of props here\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Col, Jumbotron, Label, Card } from 'react-bootstrap';\n\nexport default class ListJob extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hash: localStorage.getItem('hash'),  // not update\n            title: '',\n            appLimit: '',\n            appCount: 0,     // not update\n            postDate: '',    // not update\n            deadline: '',\n            type: \"Full-Time\",\n            maxPos: '',\n            duration: '',\n            salary: '',\n            rating: '0',      // not update\n            tempSkill: '',\n            skills: ['', 'C', 'C++', 'Java', 'JavaScript', 'Python', 'Ruby', 'x86_64', 'Kotlin', 'Swift', 'Html', 'CSS', 'SQL', 'MongoDB'],\n        }\n        this.skills_req = []\n\n    }\n    componentDidMount() {\n        var helt = ''\n        for (let x = 0; x < this.state.skills.length; x++) {\n            helt = helt + '<option value=\\\"' + this.state.skills[x] + '\\\">' + this.state.skills[x] + '</option>';\n        }\n        document.getElementById('skillset').innerHTML = helt;\n    }\n\n    checkInt(str) {\n        return !isNaN(str);\n    }\n\n    // Render form based on the user type  \n    render() {\n\n\n        var postJob = (event) => {\n            // axios call to db goes here\n            event.preventDefault();\n            var data = {\n                Hash: this.state.hash,\n                Title: this.state.title,\n                Deadline: this.state.deadline,\n                Vaccancies: parseInt(this.state.maxPos),\n                Limit: parseInt(this.state.appLimit),\n                SkillsRequired: this.skills_req,\n                Type: this.state.type,\n                Current: 0,\n                Duration: parseInt(this.state.duration),\n                Salary: parseInt(this.state.salary),\n                Rating: 0,\n            }\n            console.log('Ding');\n            console.log(data);\n            axios.post('http://localhost:5000/addJob', data)\n                .then((response) => {\n                    if (response.data.stat == 'Success') {\n                        alert(response.data.message);\n                    }\n                    else {\n                        console.log(response.data.message)\n                    }\n                    window.location.href = '/dashboard'\n                })\n                .catch((error) => {\n                    alert(error);\n                    window.location.href = '/dashboard'\n                })\n        }\n        const addSkill = (event) => {\n            event.preventDefault();\n            var sk = prompt(\"Add skill\")\n            if (sk != null) {\n                let found = false;\n                for (let i = 0; i < this.skills_req.length; i++) {\n                    if (this.skills_req[i] == sk) {\n                        found = true;\n                    }\n                }\n                if (!found) {\n                    // alert(sk)\n                    this.skills_req.push(sk);\n                    var tad = '';\n                    for (let i = 0; i < this.skills_req.length; i++) {\n                        if (i != 0) {\n                            tad = tad + ',' + this.skills_req[i]\n                        } else {\n                            tad = this.skills_req[i]\n                        }\n                    }\n                    document.getElementById('printskills').innerHTML = tad;\n                }\n                else {\n                    alert('Already Selected this skill')\n                }\n            } else {\n                alert('Unable to add skill')\n            }\n        }\n        const ddSkillAdd = (event) => {\n            event.preventDefault()\n            let found = false;\n            for (let i = 0; i < this.skills_req.length; i++) {\n                if (this.skills_req[i] == this.state.tempSkill) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                // alert(this.state.tempSkill)\n                this.skills_req.push(this.state.tempSkill);\n                var tad = '';\n                for (let i = 0; i < this.skills_req.length; i++) {\n                    if (i != 0) {\n                        tad = tad + ',' + this.skills_req[i]\n                    } else {\n                        tad = this.skills_req[i]\n                    }\n                }\n                document.getElementById('printskills').innerHTML = tad;\n            }\n            else {\n                alert('Already Selected this skill')\n            }\n            console.log('Skills are', this.state.skills_req)\n        }\n\n        return (\n            <div style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n                <Jumbotron style={{ backgroundColor: 'rgba(0,0,0,0.3)' }}>\n                    {/* Form goes here */}\n\n                    <Form method=\"post\" onSubmit={postJob}>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridEmail\" onChange={(event) => {\n                                this.setState({\n                                    title: event.target.value\n                                });\n                            }}>\n                                <Form.Label>Title</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Job Title\" value={this.state.title} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formGridPassword\" onChange={(event) => {\n                                this.setState({\n                                    deadline: event.target.value\n                                });\n                            }}>\n                                <Form.Label>Deadline</Form.Label>\n                                <Form.Control type=\"date\" placeholder=\"DD/MM/YYYY\" value={this.state.deadline} />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPassword\" onChange={(event) => {\n                                this.setState({\n                                    appLimit: event.target.value\n                                });\n                            }}>\n                                <Form.Label>Applicant Limit</Form.Label>\n                                <Form.Control type=\"number\" placeholder=\"\" value={this.state.appLimit} />\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridAddress1\" onChange={(event) => {\n                                this.setState({\n                                    skills_req: event.target.value\n                                });\n                            }}>\n                                <Form.Label>Skills Required</Form.Label>\n                                <p id=\"printskills\" style={{ fontSize: 'medium' }}>No Skills Selected</p>\n                                <select id=\"skillset\" style={{ margin: '2%' }} value={this.state.tempSkill} onChange={(event) => { this.setState({ tempSkill: event.target.value }) }}>\n                                    {/* <option value=\"fulltime\">Full-Time</option>\n                                    <option value=\"parttime\">Part-Time</option>\n                                    <option value=\"wfh\">Work From Home</option> */}\n                                </select>\n                                <Button type=\"submit\" onClick={ddSkillAdd}\n                                    style={{ margin: '2%' }}>Add</Button>\n                                <Button onClick={addSkill} type=\"submit\" style={{ marginTop: '2%' }} >Add Custom Skill</Button>\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridState\" onChange={(event) => {\n                                this.setState({\n                                    type: event.target.value\n                                });\n                            }}>\n                                <Form.Label>Job Type</Form.Label>\n                                <select onChange={(event) => { this.setState({ type: event.target.value }) }} value={this.state.type} >\n                                    <option value=\"Full-Time\">Full-Time</option>\n                                    <option value=\"Part-Time\">Part-Time</option>\n                                    <option value=\"Work From Home\">Work From Home</option>\n                                </select>\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formGridState\">\n                                <Form.Label>Vaccancies</Form.Label>\n                                <Form.Control type=\"number\" placeholder=\"Vaccancies\" value={this.state.maxPos} onChange={(event) => { this.setState({ maxPos: event.target.value }) }} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formGridPassword\" onChange={(event) => {\n                                this.setState({\n                                    salary: event.target.value\n                                });\n                            }}>\n                                <Form.Label>Salary</Form.Label>\n                                <Form.Control type=\"number\" placeholder=\"in INR\" value={this.state.salary} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formGridCity\" onChange={(event) => {\n                                this.setState({\n                                    duration: event.target.value\n                                });\n                            }}>\n                                <Form.Label>Duration</Form.Label>\n                                <Form.Control type=\"number\" placeholder=\"in months\" value={this.state.duration} />\n                            </Form.Group>\n                        </Form.Row>\n\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Post Job\n                        </Button>\n                    </Form>\n                </Jumbotron>\n            </div >\n\n        );\n    }\n}\n","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/ListJobs/ShowList.js",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"// use of props here\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Form, Table, FormGroup, Col, Jumbotron, Label, Card } from 'react-bootstrap';\nimport Popup from './PopDetails';\nexport default class ShowList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hash: localStorage.getItem('hash'),  // not update\n            viewStack: null,\n            selJid: 0,\n            ind: 1,\n            editContent: {\n                index: -1,\n                id: null,\n                deadline: null,\n                maxPositions: 0,\n                maxApplications: 0\n            },\n        }\n        this.content = []\n        this.visibleform = false;\n    }\n\n    componentDidMount() {\n        this.ff1()\n    }\n    ff1() {\n        console.log('Here FF1');\n        var here = this;\n        var data = {\n            Hash: this.state.hash,\n        }\n        axios.post('http://localhost:5000/showPostings', data)\n            .then((response) => {\n                if (response.data.stat == 'Success') {\n                    console.log(response.data.content)\n                    var temp = response.data.content\n                    here.content = response.data.content\n                    var ht = ''\n                    for (let x = 0; x < temp.length; x++) {\n                        if ((temp[x]['Deadline'] + \"\").substring(0, 10) < (new Date().toISOString())) {\n                            continue;\n                        }\n                        ht = ht + '<tr><td>' + temp[x]['Title'] + '</td><td>' + temp[x]['Recruiter']['Name'] + '</td><td>' + (temp[x]['Deadline'] + \"\").substring(0, 10) + '</td><td>' + (temp[x]['Votes']['count'] == 0 ? 'Unrated' : temp[x]['Votes']['Rating']) + '</td><td>' + temp[x]['Count']['currentApp'] + '</td><td>' + temp[x]['Duration'] + '</td><td>' + temp[x]['Salary'] + '</td><td><button value=\"viewapplications\" id=\\\"' + temp[x]['_id'] + '\\\" type=\\\"submit\\\">View Applications</button></td>'\n                        if (temp[x]['Count']['maxApp'] - temp[x]['Count']['currentApp'] > 0) {\n                            ht = ht + '<td><button type=\\\"submit\\\" id=\\\"' + temp[x]['_id'] + '\\\" value=\\\"edit' + x + '\\\">Edit</button></td>'\n                        }\n                        else {\n                            ht = ht + '<td style=\"color:grey\">Edit</td>'\n                        }\n                        ht = ht + '</tr>'\n                    }\n                    // here.content = temp;\n                    document.getElementById('hero').innerHTML = ht;\n                }\n                else {\n                    console.log('3Here FF1');\n                    console.log('Unable to Load Data')\n                    // window.location.href = '/dashboard'\n                }\n            })\n            .catch((error) => {\n                console.log('4Here FF1');\n                console.log(error, 'Error');\n                // window.location.href = '/dashboard'\n            })\n\n        console.log('IS saved?? ', here.content)\n    }\n\n\n    handleChange = (event) => {\n        const target = event.target;\n        const field = target.name;\n        const value = target.value\n\n\n\n        this.setState({\n            [field]: value\n        });\n    }\n\n    checkInt(str) {\n        return !isNaN(str);\n    }\n\n    togglePopup = (idval) => {\n        this.setState({\n            selJid: idval\n        })\n        var inps = {\n            jobId: idval,\n            hash: localStorage.getItem('hash')\n        }\n        axios.post('http://localhost:5000/getApplicants', inps)\n            .then((response) => {\n                console.log(response.data)\n                if (response.data.stat == 'Success') {\n                    console.log(response.data.content, 'Conty')\n                    var st = '<tbody style=\"font-size:smaller;\">';\n                    for (let x = 0; x < response.data.content.length; x++) {\n                        console.log(response.data.content[x]);\n                        if (response.data.content[x]['cond'] == 'Rejected') {\n                            continue;\n                        }\n                        st = st + '<tr><td style=\"padding:2%;\">' + response.data.content[x]['details']['Name'] + '</td><td style=\"padding:2%;\"><ul>';\n                        for (let y = 0; y < response.data.content[x]['details']['College'].length; y++) {\n                            st = st + '<li>' + response.data.content[x]['details']['College'][y]['Name'] + '</li>';\n                        }\n                        st = st + '</ul></td><td style=\"padding:2%;\">';\n                        for (let y = 0; y < response.data.content[x]['details']['College'].length; y++) {\n                            st = st + '<li>' + response.data.content[x]['details']['College'][y]['startYear'] + ' - ' + response.data.content[x]['details']['College'][y]['endYear'] + '</li>';\n                        }\n                        st = st + '</ul></td><td style=\"padding:2%;\"><ul>';\n                        for (let y = 0; y < response.data.content[x]['details']['Skills'].length; y++) {\n                            st = st + '<li>' + response.data.content[x]['details']['Skills'][y] + '</li>';\n                        }\n                        st = st + '</ul></td><td>' + response.data.content[x]['sop'];\n                        st = st + '</td>';\n                        st = st + '<td>' + (\"\" + response.data.content[x]['doa']).substring(0, 10);\n                        st = st + '<td><a href=\"http://localhost:5000/cv/?Hash=' + response.data.content[x]['details']['Hash'] + '\" target=\"_blank\" rel=\"noopener noreferrer\"><div id=\"link\" style=\"height:100%;width:100%\">Download CV</div></a></td>';\n                        var acc = false;\n                        if (response.data.content[x]['cond'] == 'Accepted') {\n                            acc = true;\n                            st = st + '<td style=\"color:green\">Accepted</td>';\n                        }\n                        else if (response.data.content[x]['cond'] == 'Rejected') {\n                            acc = true;\n                            st = st + '<td style=\"color:red\">Rejected</td>';\n                        }\n                        else if (response.data.content[x]['cond'] == 'Shortlisted') {\n                            st = st + '<td><button style=\"background-color:lightgreen;\" name=\"' + response.data.content[x]['details']['Hash'] + '\" id=\"accept\" value=\"' + response.data.content[x]['jid'] + '\">Accept</button>';\n                        }\n                        else {\n                            st = st + '<td><button style=\"background-color:cyan;color:blue\" name=\"' + response.data.content[x]['details']['Hash'] + '\" id=\"shortlist\" value=\"' + response.data.content[x]['jid'] + '\">Shortlist</button></td>';\n                        }\n                        if (!acc) {\n                            st = st + '<td><button style=\"background-color:crimson;color:black\" name=\"' + response.data.content[x]['details']['Hash'] + '\" id=\"reject\" value=\"' + response.data.content[x]['jid'] + '\">Reject</button></td>'\n                        }\n                        st = st + '</tr>';\n                    }\n                    st = st + '</tbody>';\n                    document.getElementById(\"renderlist\").innerHTML = st;\n                } else {\n                    alert('Failed' + response.data.message);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n    // Render form based on the user type  \n    render() {\n\n\n        var sortByProperty = (property, ind) => {\n            return function (a, b) {\n                if (a['details'][property] > b['details'][property])\n                    return ind;\n                else if (a['details'][property] < b['details'][property])\n                    return (-1 * ind);\n\n                return 0;\n            }\n        }\n\n        var sortAndPlace = (cate) => {\n            if (this.state.selJid == 0) {\n                return;\n            }\n            var inps = {\n                jobId: this.state.selJid,\n                hash: localStorage.getItem('hash')\n            }\n            axios.post('http://localhost:5000/getApplicants', inps)\n                .then((response) => {\n                    console.log(response.data)\n                    if (response.data.stat == 'Success') {\n                        response.data.content = JSON.parse(JSON.stringify(response.data.content))\n                        console.log(response.data.content, 'Conty')\n                        var ii = this.state.ind;\n                        this.setState({\n                            ind: (-1 * ii)\n                        })\n                        response.data.content = response.data.content.sort(sortByProperty(cate, ii))\n                        var st = '<tbody style=\"font-size:smaller;\">';\n                        for (let x = 0; x < response.data.content.length; x++) {\n                            console.log(response.data.content[x]);\n                            if (response.data.content[x]['cond'] == 'Rejected') {\n                                continue;\n                            }\n                            st = st + '<tr><td style=\"padding:2%;\">' + response.data.content[x]['details']['Name'] + '</td><td style=\"padding:2%;\"><ul>';\n                            for (let y = 0; y < response.data.content[x]['details']['College'].length; y++) {\n                                st = st + '<li>' + response.data.content[x]['details']['College'][y]['Name'] + '</li>';\n                            }\n                            st = st + '</ul></td><td style=\"padding:2%;\">';\n                            for (let y = 0; y < response.data.content[x]['details']['College'].length; y++) {\n                                st = st + '<li>' + response.data.content[x]['details']['College'][y]['startYear'] + ' - ' + response.data.content[x]['details']['College'][y]['endYear'] + '</li>';\n                            }\n                            st = st + '</ul></td><td style=\"padding:2%;\"><ul>';\n                            for (let y = 0; y < response.data.content[x]['details']['Skills'].length; y++) {\n                                st = st + '<li>' + response.data.content[x]['details']['Skills'][y] + '</li>';\n                            }\n                            st = st + '</ul></td><td>' + response.data.content[x]['sop'];\n                            st = st + '</td>';\n                            st = st + '<td>' + (\"\" + response.data.content[x]['doa']).substring(0, 10);\n                            st = st + '<td><a href=\"http://localhost:5000/cv/?Hash=' + response.data.content[x]['details']['Hash'] + '\" target=\"_blank\" rel=\"noopener noreferrer\"><div id=\"link\" style=\"height:100%;width:100%\">Download CV</div></a></td>';\n                            var acc = false;\n                            if (response.data.content[x]['cond'] == 'Accepted') {\n                                acc = true;\n                                st = st + '<td style=\"color:green\">Accepted</td>';\n                            }\n                            else if (response.data.content[x]['cond'] == 'Rejected') {\n                                acc = true;\n                                st = st + '<td style=\"color:red\">Rejected</td>';\n                            }\n                            else if (response.data.content[x]['cond'] == 'Shortlisted') {\n                                st = st + '<td><button style=\"background-color:lightgreen;\" name=\"' + response.data.content[x]['details']['Hash'] + '\" id=\"accept\" value=\"' + response.data.content[x]['jid'] + '\">Accept</button>';\n                            }\n                            else {\n                                st = st + '<td><button style=\"background-color:cyan;color:blue\" name=\"' + response.data.content[x]['details']['Hash'] + '\" id=\"shortlist\" value=\"' + response.data.content[x]['jid'] + '\">Shortlist</button></td>';\n                            }\n                            if (!acc) {\n                                st = st + '<td><button style=\"background-color:crimson;color:black\" name=\"' + response.data.content[x]['details']['Hash'] + '\" id=\"reject\" value=\"' + response.data.content[x]['jid'] + '\">Reject</button></td>'\n                            }\n                            st = st + '</tr>';\n                        }\n                        st = st + '</tbody>';\n                        document.getElementById(\"renderlist\").innerHTML = st;\n                    } else {\n                        alert('Failed' + response.data.message);\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n        return (\n            <div style={{ marginTop: '10%' }}>\n                <Jumbotron style={{ backgroundColor: 'rgba(0,0,0,0.3)' }}>\n                    <Table striped bordered hover variant=\"dark\" onClick={(event) => {\n                        event.preventDefault();\n                        if ((event.target.value + \"\").substring(0, 4) == 'edit') {\n                            // editJob(event.target.id);\n                            let index0 = parseInt((event.target.value + \"\").substring(4));\n                            console.log(this.content, 'blah');\n                            this.setState({\n                                editContent: {\n                                    index: index0,\n                                    id: event.target.id,\n                                    maxPositions: this.content[index0]['Count']['maxPositions'],\n                                    maxApp: this.content[index0]['Count']['maxApp'],\n                                    deadline: this.content[index0]['Deadline'],\n                                }\n                            });\n                            this.visibleform = true;\n                        }\n                        else {\n                            this.togglePopup(event.target.id);\n                        }\n                    }\n                    }>\n                        <thead>\n                            <tr>\n                                <th>Job Title</th>\n                                <th>Recruiter</th>\n                                <th>Deadline</th>\n                                <th>Rating</th>\n                                <th># of Posts</th>\n                                <th>Duration</th>\n                                <th>Salary</th>\n                                <th>View Applications</th>\n                                <th>Edit Job</th>\n                            </tr>\n                        </thead>\n                        <tbody id=\"hero\">\n                        </tbody>\n                    </Table>\n                    <button onClick={\n                        (event) => {\n                            event.preventDefault();\n                            document.getElementById(\"renderlist\").innerHTML = \"Results appear here\";\n                        }\n                    }> Hide Results</button>\n\n                    <Table striped bordered hover variant=\"dark\" style={{ marginTop: '2%', fontSize: '2vh' }} onClick={(event) => {\n                        if (event.target.id != 'link')\n                            event.preventDefault();\n                        console.log(event.target)\n\n                        // send to server to select this candidate\n                        if (event.target.id == \"accept\" || event.target.id == 'shortlist' || event.target.id == \"reject\") {\n                            var da = {\n                                stype: event.target.id == \"accept\" ? \"Accepted\" : (event.target.id == \"reject\" ? \"Rejected\" : \"Shortlisted\"),\n                                jobId: event.target.value,\n                                ApplicantId: event.target.name\n                            }\n                            axios.post('http://localhost:5000/selectCandidate', da)\n                                .then((response) => {\n                                    alert(response.data.message)\n                                    this.togglePopup(event.target.value)\n                                })\n                                .catch((err) => {\n                                    alert(err);\n                                })\n                        }\n                    }\n                    }>\n                        <thead>\n                            <tr>\n                                <th onClick={(event) => {\n                                    event.preventDefault();\n                                    sortAndPlace('details.Name');\n                                }}>Name</th>\n                                <th>College</th>\n                                <th>Duration</th>\n                                <th>Skills</th>\n                                <th>SOP</th>\n                                <th onClick={(event) => {\n                                    event.preventDefault();\n                                    sortAndPlace('doa');\n                                }}>Application Date</th>\n                                <th>CV Download</th>\n                                <th>Accept/Reject</th>\n                            </tr>\n                        </thead>\n                        <tbody id=\"renderlist\">\n                        </tbody>\n                    </Table>\n                    <form id=\"editApplication\" type=\"post\" onSubmit={\n                        (event) => {\n                            event.preventDefault();\n\n                            // Code to check constraints \n                            // var ind = this.state.editContent.index;\n                            // this.setState({\n                            //     editContent : {\n                            //         maxPositions : (this.content[ind]['Count']['maxPositions']< this.state.editContent.maxPositions? this.state.editContent.maxPositions: this.content[ind]['Count']['maxPositions']),\n                            //         maxPositions : (this.content[ind]['Count']['currentApp']< this.state.editContent.maxApplications? this.state.editContent.maxApplications: this.content[ind]['Count']['currentApp'])\n                            //     }\n                            // })\n                            // axios post request here\n                            axios.post('http://localhost:5000/editJob', { id: this.state.editContent })\n                                .then((response) => {\n                                    alert(response.data.message);\n                                })\n                                .catch((error) => {\n                                    alert(error);\n                                })\n                            console.log(this.state.editContent)\n                        }\n                    }>\n                        <p>\n                            Job {this.state.editContent.id}\n                        </p>\n                        <button onClick={\n                            (event) => {\n                                event.preventDefault();\n                                axios.post('http://localhost:5000/deleteJob', { id: this.state.editContent.id })\n                                    .then((response) => {\n                                        alert(response.data.message);\n                                    })\n                                    .catch((error) => {\n                                        alert(error);\n                                    })\n                                console.log('Delete');\n                            }\n                        }>Delete</button>\n                        <div>\n                            <label style={{ marginRight: '2%' }}>Deadline</label>\n                            <input type=\"date\" value={this.state.editContent.deadline} onChange={\n                                (event) => {\n                                    event.preventDefault()\n                                    this.setState({\n                                        editContent: {\n                                            id: this.state.editContent.id,\n                                            deadline: event.target.value,\n                                            maxApplications: this.state.editContent.maxApplications,\n                                            maxPositions: this.state.editContent.maxPositions\n                                        }\n                                    })\n                                }\n                            }></input>\n                        </div>\n                        <div>\n                            <label style={{ marginRight: '2%' }}>Max-Allowed Applicants</label>\n                            <input type=\"number\" value={this.state.editContent.maxApplications} onChange={\n                                (event) => {\n                                    event.preventDefault()\n                                    this.setState({\n                                        editContent: {\n                                            id: this.state.editContent.id,\n                                            deadline: this.state.editContent.deadline,\n                                            maxApplications: event.target.value,\n                                            maxPositions: this.state.editContent.maxPositions\n                                        }\n                                    })\n                                }\n                            }></input>\n                        </div>\n                        <div>\n                            <label style={{ marginRight: '2%' }}>Max-Posts Open</label>\n                            <input type=\"number\" value={this.state.editContent.maxPositions} onChange={\n                                (event) => {\n                                    event.preventDefault()\n                                    this.setState({\n                                        editContent: {\n                                            id: this.state.editContent.id,\n                                            deadline: this.state.editContent.deadline,\n                                            maxApplications: this.state.editContent.maxApplications,\n                                            maxPositions: event.target.value\n                                        }\n                                    })\n                                }\n                            }></input>\n                        </div>\n                        <button>Edit</button>\n                    </form>\n\n                </Jumbotron>\n            </div >\n\n        );\n    }\n}\n","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/SearchPane/Search.js",["232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"// use of props here\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Col, Jumbotron, Dropdown, FormControl, DropdownButton, InputGroup, Table, ButtonGroup, Label, Card } from 'react-bootstrap';\nimport Parser from 'html-react-parser';\nimport { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider';\nexport default class SearchBox extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hash: localStorage.getItem('hash'),  // not update\n            searchQuery: '',\n            max_salary: 100000000000,\n            min_salary: 0,\n            duration: '',\n            type: '',\n            ord: 1,\n            choosenIndex: -1,\n            rating: -1,\n            results: [],\n        }\n        this.enableTextbar = false;\n        this.selectedRow = -1;\n    }\n\n    checkInt(str) {\n        return !isNaN(str);\n    }\n\n    applyNow() {\n\n    }\n\n    // Render form based on the user type  \n    render() {\n\n        var postSearch = (event) => {\n            // axios call to db goes here\n            event.preventDefault();\n            this.setState({\n                results: []\n            });\n            axios.post('http://localhost:5000/searchRequest', this.state)\n                .then((response) => {\n                    document.getElementById('result-for-search').innerHTML = '';\n                    if (response.data.stat == 'Success') {\n                        this.setState({\n                            results: JSON.parse(response.data.content)\n                        })\n                        var tableHTML = \"\"\n                        var nos = 0;\n                        console.log(this.state.results, 'new results')\n\n                        for (var eachElt in this.state.results) {\n                            var eachItem = this.state.results[eachElt]['dd']\n                            console.log('eachItem', eachItem);\n\n                            // type filter ( to be tested on Saturday)\n                            // if(this.state.type == 'parttime' && eachItem['Type']!='PartTime'){\n                            //     continue;\n                            // }else if(this.state.type == 'wfh' && eachItem['Type']!='WorkFromHome'){\n                            //     continue;\n                            // } else if(this.state.type == 'fulltime' && eachItem['Type']!='FullTime'){\n                            //     continue;\n                            // }\n\n                            tableHTML += \"<tr>\";\n                            tableHTML += \"<td>\" + nos + \"</td>\";\n                            tableHTML += \"<td>\" + eachItem['Title'] + \"</td>\";\n                            tableHTML += \"<td>\" + eachItem['Recruiter']['Name'] + \"</td>\";\n                            tableHTML += \"<td>\" + (eachItem['Votes']['count'] == 0 ? 'unrated' : (parseFloat(\"\" + eachItem['Votes']['Rating']) / eachItem['Votes']['count'])) + \"</td>\";\n                            tableHTML += \"<td>\" + eachItem['Salary'] + \"</td>\";\n                            tableHTML += \"<td>\" + eachItem['Duration'] + \" months</td>\";\n                            tableHTML += \"<td>\" + (eachItem['Deadline'] + \"\").substring(0, 10) + \"</td>\";\n                            if (this.state.results[eachElt]['st'] == 'NA')\n                                tableHTML += \"<td><button value=\\\"button\\\" id=\\\"\" + eachItem['_id'] + \"\\\" type=\\\"submit\\\">Apply Now</button></td>\";\n                            else if (this.state.results[eachElt]['st'] == 'Full') {\n                                tableHTML += \"<td style=\\\"color:yellow\\\">Full</td>\";\n                            }\n                            else if (this.state.results[eachElt]['st'] == 'Pending') {\n                                tableHTML += \"<td style=\\\"color:blue\\\">Pending</td>\";\n                            }\n                            else if (this.state.results[eachElt]['st'] == 'Accepted') {\n                                tableHTML += \"<td style=\\\"color:green\\\">Accepted</td>\";\n                            }\n                            else if (this.state.results[eachElt]['st'] == 'Shortlisted') {\n                                tableHTML += \"<td style=\\\"color:brown\\\">Shortlisted</td>\";\n                            }\n                            else if (this.state.results[eachElt]['st'] == 'Rejected') {\n                                tableHTML += \"<td style=\\\"color:crimson\\\">Rejected</td>\";\n                            } tableHTML += \"</tr>\";\n                            nos++;\n                        }\n\n                        document.getElementById('result-for-search').innerHTML = tableHTML;\n                    }\n                    else {\n                        alert(response.data.message)\n                        // window.location.href='/dashboard';\n                    }\n                })\n                .catch((err) => {\n                    alert(err);\n                    // window.location.href = '/dashboard';\n                })\n\n        }\n        var sortByProperty = (property, ind) => {\n            if (property != 'Votes.Rating') {\n                return function (a, b) {\n                    if (a['dd'][property] > b['dd'][property])\n                        return ind;\n                    else if (a['dd'][property] < b['dd'][property])\n                        return (-1 * ind);\n\n                    return 0;\n                }\n            }\n            else {\n                return function (a, b) {\n                    // alert(a['dd']['Votes']['count'],a['dd']['Votes']['Rating']);\n                    if (((a['dd']['Votes']['count'] != 0) ? (parseFloat(\"\" + a['dd']['Votes']['Rating']) / a['dd']['Votes']['count']) : 0) > ((b['dd']['Votes']['count'] != 0) ? (parseFloat(\"\" + b['dd']['Votes']['Rating']) / b['dd']['Votes']['count']) : 0))\n                        return ind;\n                    else if (((a['dd']['Votes']['count'] != 0) ? (parseFloat(\"\" + a['dd']['Votes']['Rating']) / a['dd']['Votes']['count']) : 0) < ((b['dd']['Votes']['count'] != 0) ? (parseFloat(\"\" + b['dd']['Votes']['Rating']) / b['dd']['Votes']['count']) : 0))\n                        return (-1 * ind);\n                    return 0;\n                }\n            }\n        }\n\n        var sortAndPlace = (cate) => {\n            var ii = this.state.ord;\n            this.setState({\n                results: this.state.results.sort(sortByProperty(cate, ii)),\n                ord: (ii == 1 ? -1 : 1)\n            });\n            var tableHTML = \"\"\n            var nos = 0;\n            console.log(this.state.results, 'new results')\n\n            for (var eachElt in this.state.results) {\n                var eachItem = this.state.results[eachElt]['dd']\n                console.log('eachItem', eachItem);\n\n                // type filter ( to be tested on Saturday)\n                // if(this.state.type == 'parttime' && eachItem['Type']!='PartTime'){\n                //     continue;\n                // }else if(this.state.type == 'wfh' && eachItem['Type']!='WorkFromHome'){\n                //     continue;\n                // } else if(this.state.type == 'fulltime' && eachItem['Type']!='FullTime'){\n                //     continue;\n                // }\n\n                tableHTML += \"<tr>\";\n                tableHTML += \"<td>\" + nos + \"</td>\";\n                tableHTML += \"<td>\" + eachItem['Title'] + \"</td>\";\n                tableHTML += \"<td>\" + eachItem['Recruiter']['Name'] + \"</td>\";\n                tableHTML += \"<td>\" + (eachItem['Votes']['count'] == 0 ? 'unrated' : (parseFloat(\"\" + eachItem['Votes']['Rating']) / eachItem['Votes']['count'])) + \"</td>\";\n                tableHTML += \"<td>\" + eachItem['Salary'] + \"</td>\";\n                tableHTML += \"<td>\" + eachItem['Duration'] + \" months</td>\";\n                tableHTML += \"<td>\" + (eachItem['Deadline'] + \"\").substring(0, 10) + \"</td>\";\n                if (this.state.results[eachElt]['st'] == 'NA')\n                    tableHTML += \"<td><button value=\\\"button\\\" id=\\\"\" + eachItem['_id'] + \"\\\" type=\\\"submit\\\">Apply Now</button></td>\";\n                else if (this.state.results[eachElt]['st'] == 'Full') {\n                    tableHTML += \"<td style=\\\"color:yellow\\\">Full</td>\";\n                }\n                else if (this.state.results[eachElt]['st'] == 'Pending') {\n                    tableHTML += \"<td style=\\\"color:blue\\\">Pending</td>\";\n                }\n                else if (this.state.results[eachElt]['st'] == 'Accepted') {\n                    tableHTML += \"<td style=\\\"color:green\\\">Accepted</td>\";\n                }\n                else if (this.state.results[eachElt]['st'] == 'Shortlisted') {\n                    tableHTML += \"<td style=\\\"color:brown\\\">Shortlisted</td>\";\n                }\n                else if (this.state.results[eachElt]['st'] == 'Rejected') {\n                    tableHTML += \"<td style=\\\"color:crimson\\\">Rejected</td>\";\n                }\n                tableHTML += \"</tr>\";\n                nos++;\n            }\n            document.getElementById('result-for-search').innerHTML = tableHTML;\n        }\n\n        var postApplication = (pos, uid) => {\n            // code stuff\n\n            // Now we want to send the following data about the job applicant wants to apply for\n            // RecruiterHash, ApplicantHash, Jobid, SOP, Date-of-Application\n            // alert('Submitting...'+uid)\n            // console.log('Res : ',this.state.results[0])\n            for (let i = 0; i < this.state.results.length; i++) {\n                console.log(this.state.results[i], uid)\n                if (this.state.results[i]['dd']['_id'] == uid) {\n                    if (this.state.results[i]['dd']['Count']['maxApp'] - this.state.results[i]['dd']['Count']['currentApp'] != 0) {\n                        var data = {\n                            userhash: localStorage.getItem('hash'),\n                            recruiterhash: this.state.results[i]['dd']['Recruiter']['Hash'],\n                            jid: uid,\n                            sop: pos\n                        }\n                        axios.post('http://localhost:5000/applyForJob', data)\n                            .then((response) => {\n                                alert(response.data.message)\n                            })\n                            .catch((err) => {\n                                alert(err)\n                            })\n                    }\n                }\n            }\n        }\n        return (\n            <div style={{ marginTop: '10%' }}>\n                <Jumbotron style={{ marginLeft: '5vh', marginRight: '5vh', color: '#055', backgroundColor: 'rgba(110,200,200,0.2)' }}>\n                    <p style={{ fontFamily: 'Helvetica Neue', fontWeight: '800', fontSize: '5vh', color: 'black' }}>Searh for Jobs</p>\n                    <Form inline method=\"post\" onSubmit={postSearch}>\n\n                        <FormControl type=\"text\" placeholder=\"Search\" value={this.state.searchQuery} onChange={\n                            (event) => {\n                                event.preventDefault()\n                                this.setState({\n                                    searchQuery: event.target.value\n                                })\n                            }\n                        } className=\"mr-sm-2\" />\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\" style={{ paddingRight: '1vh' }}>\n                            <select value={this.state.type} onChange={(event) => { this.setState({ type: event.target.value }) }}>\n                                <option value=\"\">Any Type</option>\n                                <option value=\"Part-Time\">Part-Time</option>\n                                <option value=\"Full-Time\">Full-Time</option>\n                                <option value=\"Work From Home\">Work From Home</option>\n                            </select>\n                        </Form.Group>\n\n                        <FormControl type=\"number\" placeholder=\"Duration in Months\" style={{ marginRight: '2%' }} value={this.state.duration} onChange={\n                            (event) => {\n                                event.preventDefault()\n                                this.setState({\n                                    duration: event.target.value\n                                });\n                            }\n                        } />\n                        <InputGroup className=\"mb-3\" style={{ paddingTop: '2vh' }}>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text>Salary Range</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl type=\"number\" placeholder=\"Min Salary\" value={this.state.min_salary} onChange={(event) => { this.setState({ min_salary: event.target.value }) }} />\n                            <FormControl type=\"number\" placeholder=\"Max Salary\" value={this.state.max_salary} onChange={(event) => { this.setState({ max_salary: event.target.value }) }} />\n                            <Button style={{ marginLeft: '2vh', paddingLeft: '2vh' }} variant=\"success\" type=\"submit\">GO</Button>\n                        </InputGroup>\n                    </Form>\n                    <div style={{ paddingTop: '3%' }}>\n                        <Table striped bordered hover variant=\"dark\" responsive style={{ backgroundColor: 'rgba(50,50,50,0.6' }} onClick={\n                            (event) => {\n                                event.preventDefault();\n                                if (event.target.value != 'button') {\n                                    // alert('Gotcha')\n                                    return;\n                                }\n                                var sop = prompt('Enter SOP', \"\");\n                                postApplication(sop, event.target.id)\n                                // postSearch(event);\n                            }\n                        }>\n                            <thead>\n                                <tr>\n                                    {/*Add onclick sort function*/}\n                                    <th>#</th>\n                                    <th>Job Title</th>\n                                    <th>Recruiter</th>\n                                    <th onClick={(event) => {\n                                        event.preventDefault();\n                                        sortAndPlace('Votes.Rating');\n                                    }}>Rating{this.state.ord == 1 ? ('\\u2193') : ('\\u2191')}</th>\n                                    <th onClick={(event) => {\n                                        event.preventDefault();\n                                        sortAndPlace('Salary');\n                                    }}>Salary{this.state.ord == 1 ? ('\\u2193') : ('\\u2191')}</th>\n                                    <th onClick={(event) => {\n                                        event.preventDefault();\n                                        sortAndPlace('Duration');\n                                    }}>Duration{this.state.ord == 1 ? ('\\u2193') : ('\\u2191')}</th>\n                                    <th onClick={(event) => {\n                                        event.preventDefault();\n                                        sortAndPlace('Deadline');\n                                    }}>Deadline of Application{this.state.ord == 1 ? ('\\u2193') : ('\\u2191')}</th>\n                                    <th>Apply Now</th>\n                                </tr>\n                            </thead>\n                            <tbody id=\"result-for-search\" >\n                                {/*  */}\n                            </tbody>\n\n                        </Table>\n                    </div>\n                    <div>\n                        <p>Rate a Job</p>\n                        <p>Rating</p>\n                        <input type=\"number\" placeholder=\"Enter rating[0-5]\" value={this.state.rating} onChange={(event) => {\n                            this.setState({\n                                rating: event.target.value\n                            })\n                        }} />\n                        <p>Job Index</p>\n                        <input type=\"number\" placeholder=\"Enter job Index\" value={this.state.choosenIndex} onChange={(event) => {\n                            this.setState({\n                                choosenIndex: event.target.value\n                            })\n                        }} />\n                        <button type=\"submit\" onClick={(event) => {\n                            event.preventDefault();\n                            if (this.state.rating == -1 || this.state.choosenIndex == -1) {\n                                alert('Fill Fields First');\n                            }\n                            else if (this.state.results.length <= this.state.choosenIndex || this.state.rating > 5 || this.state.choosenIndex < 0 || this.state.rating < 0) {\n                                alert('Invalid Selection');\n                            }\n                            else {\n                                axios.post('http://localhost:5000/rateJob', { jobId: this.state.results[this.state.choosenIndex]['dd']['_id'], hash: localStorage.getItem('hash'), rating: this.state.rating })\n                                    .then((response) => {\n                                        alert(response.data.message);\n                                    })\n                                    .catch((err) => {\n                                        alert(err);\n                                    })\n                            }\n                        }}>Rate!</button>\n                    </div>\n                </Jumbotron>\n            </div >\n        );\n    }\n}\n","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/Dashboard/ApplyJob.js",["271","272","273","274","275","276","277","278","279","280","281"],"// use of props here\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Col, Jumbotron, Label, Card } from 'react-bootstrap';\n\nexport default class ApplyJob extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: -1,\n            sop: '',\n            sop_length: 0,\n            password: '',\n            namesake: '',\n            bios: '',\n            CollegeName: '',\n            StartYear: '',\n            EndYear: '',\n            Skills: '',\n            Rating: '',\n            contact: '',\n            isnew: false,\n        }\n    }\n    initF(selection) {\n\n\n        if (selection == null || (selection.toString() != '1' && selection.toString() != '2')) {\n            alert('Please enter a valid choice');\n            window.location.href = '/';\n        }\n        else {\n            this.state.isnew = true;\n        }\n        if (selection.toString() == '2') {\n            this.state.usertype = 'Recruiter';\n        }\n        else if (selection.toString() == '1') {\n            this.state.usertype = 'Applicant';\n        }\n    }\n\n\n\n\n    handleChange = (event) => {\n        const target = event.target;\n        const field = target.name;\n        const value = target.value\n\n\n\n        this.setState({\n            [field]: value\n        });\n    }\n\n    checkInt(str) {\n        return !isNaN(str);\n    }\n\n    \n    // Render form based on the user type  \n    render() {\n        var login = (event) => {\n            event.preventDefault();\n            console.log('Done');\n            var data = {\n                email: this.state.email.toString(),\n                password: this.state.password.toString(),\n                usertype: this.state.usertype.toString(),\n                name: this.state.namesake.toString(),\n                bio: this.state.bios.toString(),\n                collegeName: this.state.CollegeName.toString(),\n                startYear: this.state.StartYear.toString(),\n                endYear: this.state.EndYear.toString(),\n                skills: this.state.Skills.toString(),\n                rating: this.state.Rating.toString(),\n                contact: this.state.contact.toString(),\n                hash1: 'Guest'\n            };\n            \n            axios.post('http://localhost:5000/signIn', data)\n            .then((response) => {\n                console.log(response);\n                if (response.data.stat.toString() == 'Error') {\n                    alert(\"Login failed\\n\" + response.data.message);\n                }\n                else {\n                    alert(\"Login Successful.\\n\" + response.data.message);\n                    // session store the login data\n                    localStorage.setItem('hash', response.data.userhash);\n                    localStorage.setItem('type', response.data.usertype);\n                    window.location.href = '/';\n                }\n            })\n            .catch(err => {\n                alert(err);\n            });\n        }\n        \n        const textAreaChange = (event)=> {\n            if (this.state.sop_length < 250) {\n                this.setState({\n                    sop: event.target.value\n                });\n                this.setState({\n                    sop_length: this.state.sop.length\n                });\n            }\n            else if (event.target.value.toString().length < 250) {\n                this.setState({\n                    sop: event.target.value\n                });\n                this.setState({\n                    sop_length: this.state.sop.length\n                });\n            }\n        }\n        \n        return (\n            <div style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n\n                <p style={{ backgroundColor: 'rgba(0,255,0,0.65)' }}>Apply Now</p>\n                <Jumbotron style={{ backgroundColor: 'rgba(0,0,0,0.3)' }}>\n                    <Form id=\"LoginForm\" method=\"post\" onSubmit={login}>\n                        <Form.Row style={{ backgroundColor: 'rgba(100,0,100,0.6)' }}>\n\n                            <Form.Group as={Col} controlId=\"formGridEmail\"\n                                style={{ marginLeft: '25%', marginRight: '25%' }}\n                                onChange={\n                                    (event) => {\n                                        if (this.state.isnew) {\n                                            this.setState({\n                                                email: event.target.value\n                                            })\n                                        }\n                                    }\n                                }> {/** un-editable for now */}\n                                <Form.Label>Job #</Form.Label>\n                                <Form.Control type=\"number\" placeholder=\"Enter Job #\" value={this.state.email} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row style={{ backgroundColor: 'rgba(100,0,150,0.6)', marginTop: '10%' }}>\n                            <Form.Group as={Col} controlId=\"formGridZip\" onChange={(event) => { this.setState({ bios: event.target.value }); }}>\n                                <Form.Label>Statement of Purpose</Form.Label>\n                                <p style={{ fontSize: '60%' }}>Max 250 words</p>\n                                <Form.Control as=\"textarea\" maxlength=\"10\" rows={4} value={this.state.sop} onChange={textAreaChange} />\n                            </Form.Group>\n\n                        </Form.Row>\n\n                        <Button variant=\"primary\" type=\"submit\" style={{marginTop:'5%'}}>\n                            Submit\n                        </Button>\n\n                    </Form>\n                </Jumbotron>\n            </div >\n\n        );\n    }\n}\n","/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/Upload/UFile.js",[],"/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/ListJobs/PopDetails.js",["282"],"import React from 'react';\nimport './Pop.css'\nimport axios from 'axios';\nexport default class Popup extends React.Component{\n    constructor(props){\n        super(props);\n        this.jobId = props.jobId;\n        this.applicant = props.applicant;\n        this.sop = props.sop;\n        this.loadData()\n    }\n    loadData(){\n        \n    }\n    \n    render(){\n        return(\n            <div className=\"popup-box\">\n                <div className=\"box\">\n                    <p>Job ID : {this.jobId}</p>\n                </div>\n                <button onClick={this.props.closePopup}>OK</button>\n            </div>\n        )\n    }\n}",["283","284"],"/home/einzelganger/Desktop/DASS/Assignment-1-Mern_Stack/frontend/jobify/src/Components/ListJobs/Accepted.js",["285","286","287","288","289","290","291","292","293","294"],"// use of props here\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Form, Table, FormGroup, Col, Jumbotron, Label, Card } from 'react-bootstrap';\nimport Popup from './PopDetails';\nexport default class AcceptedList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            order: 1,\n        }\n        this.results = []\n\n    }\n\n    componentDidMount() {\n        this.ff1(this)\n    }\n\n    async ff1(sts) {\n        // localStorage.setItem('temp', 'blah');\n        var self = this;\n        var dat = {\n            Hash: localStorage.getItem('hash'),\n        }\n\n        await axios.post('http://localhost:5000/acceptedApplicants', dat)\n            .then(response => {\n                console.log('Accepted Applicants are :: ', response.data)\n                this.results = JSON.parse(response.data.obj)\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        // this.setState({\n        //     results: JSON.parse(res)\n        // });\n        console.log(this.results, 'res')\n        var ih = '';\n        for (let x = 0; x < this.results.length; x++) {\n            let J_Title = this.results[x]['job']['Title'];\n            let AppName = this.results[x]['user']['Name'];\n            let Rating = 0;\n            // let Rating = (this.results[x]['user']['Votes']['count'] == 0 ? 'Unrated' : this.results[x]['user']['Votes']['count']);\n            let Duration = this.results[x]['job']['Duration'] + \" months\";\n            let Salary = this.results[x]['job']['Salary'];\n            let Type = this.results[x]['job']['JobType'];\n\n            ih += '<tr><td>' + J_Title + '</td><td>' + AppName + '</td><td>' + Rating + '</td><td>' + Duration + '</td><td>' + Salary + '</td><td>' + Type + '</td></tr>';\n        }\n\n        document.getElementById('zero').innerHTML = ih;\n\n    }\n\n\n    // Render form based on the user type  \n    render() {\n\n\n\n        var sortByProperty = (property, ind) => {\n            return function (a, b) {\n                if (a[property] > b[property])\n                    return ind;\n                else if (a[property] < b[property])\n                    return (-1 * ind);\n                return 0;\n            }\n        }\n\n\n        var sortAndPlace = (cate) => {\n            this.setState({\n                results: this.results.sort(sortByProperty(cate, this.state.order))\n            });\n            this.setState({\n                order: (-1 * this.state.order)\n            })\n            var nos = 1;\n            console.log(this.results, 'new results')\n            var ih = '';\n            for (let x = 0; x < this.results.length; x++) {\n                let J_Title = this.results['job']['Title'];\n                let AppName = this.results['user']['Name'];\n                let Rating = (this.results['user']['Votes']['count'] == 0 ? 'Unrated' : this.results['user']['Votes']['count']);\n                let Duration = this.results['job']['Duration'] + \" months\";\n                let Salary = this.results['job']['Salary'];\n                let type = this.results['job']['Type'];\n\n                ih += '<tr><td>' + J_Title + '</td><td>' + AppName + '</td><td>' + Rating + '</td><td>' + Duration + '</td><td>' + Salary + '</td><td>' + type + '</td></tr>';\n\n            }\n            alert('sorted');\n            document.getElementById('zero').innerHTML = ih;\n        }\n\n\n\n\n\n\n        return (\n            <div style={{ marginTop: '10%' }}>\n                <Jumbotron style={{ backgroundColor: 'rgba(0,0,0,0.3)' }}>\n                    <Table striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <th onClick={\n                                    (event) => {\n                                        event.preventDefault();\n                                        sortAndPlace('job.Title');\n                                    }\n                                }>Job Title</th>\n                                <th onClick={\n                                    (event) => {\n                                        event.preventDefault();\n                                        sortAndPlace('user.Name');\n                                    }\n                                }>Applicant Name</th>\n                                <th onClick={\n                                    (event) => {\n                                        event.preventDefault();\n                                        sortAndPlace('user.Count.Rating');\n                                    }\n                                }>Rating</th>\n                                <th onClick={\n                                    (event) => {\n                                        event.preventDefault();\n                                        sortAndPlace('job.Duration');\n                                    }\n                                }>Duration</th>\n                                <th onClick={\n                                    (event) => {\n                                        event.preventDefault();\n                                        sortAndPlace('job.Salary');\n                                    }\n                                }>Salary</th>\n                                <th>Job Type</th>\n                            </tr>\n                        </thead>\n                        <tbody id=\"zero\" style={{ fontSize: '2vh' }}>\n                        </tbody>\n                    </Table>\n\n                </Jumbotron>\n            </div >\n\n        );\n    }\n}\n",{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":1,"column":8,"nodeType":"301","messageId":"302","endLine":1,"endColumn":12},{"ruleId":"299","severity":1,"message":"303","line":3,"column":32,"nodeType":"301","messageId":"302","endLine":3,"endColumn":38},{"ruleId":"295","replacedBy":"304"},{"ruleId":"297","replacedBy":"305"},{"ruleId":"299","severity":1,"message":"306","line":2,"column":36,"nodeType":"301","messageId":"302","endLine":2,"endColumn":40},{"ruleId":"299","severity":1,"message":"307","line":2,"column":24,"nodeType":"301","messageId":"302","endLine":2,"endColumn":33},{"ruleId":"299","severity":1,"message":"308","line":2,"column":35,"nodeType":"301","messageId":"302","endLine":2,"endColumn":40},{"ruleId":"309","severity":1,"message":"310","line":33,"column":61,"nodeType":"311","messageId":"312","endLine":33,"endColumn":63},{"ruleId":"309","severity":1,"message":"310","line":40,"column":44,"nodeType":"311","messageId":"312","endLine":40,"endColumn":46},{"ruleId":"313","severity":1,"message":"314","line":76,"column":41,"nodeType":"315","endLine":76,"endColumn":56},{"ruleId":"313","severity":1,"message":"314","line":88,"column":41,"nodeType":"315","endLine":88,"endColumn":75},{"ruleId":"299","severity":1,"message":"316","line":5,"column":18,"nodeType":"301","messageId":"302","endLine":5,"endColumn":22},{"ruleId":"299","severity":1,"message":"306","line":5,"column":24,"nodeType":"301","messageId":"302","endLine":5,"endColumn":28},{"ruleId":"299","severity":1,"message":"317","line":5,"column":41,"nodeType":"301","messageId":"302","endLine":5,"endColumn":50},{"ruleId":"299","severity":1,"message":"318","line":5,"column":52,"nodeType":"301","messageId":"302","endLine":5,"endColumn":65},{"ruleId":"299","severity":1,"message":"319","line":5,"column":74,"nodeType":"301","messageId":"302","endLine":5,"endColumn":78},{"ruleId":"299","severity":1,"message":"320","line":5,"column":80,"nodeType":"301","messageId":"302","endLine":5,"endColumn":90},{"ruleId":"299","severity":1,"message":"321","line":5,"column":114,"nodeType":"301","messageId":"302","endLine":5,"endColumn":125},{"ruleId":"299","severity":1,"message":"322","line":5,"column":134,"nodeType":"301","messageId":"302","endLine":5,"endColumn":137},{"ruleId":"299","severity":1,"message":"323","line":5,"column":144,"nodeType":"301","messageId":"302","endLine":5,"endColumn":152},{"ruleId":"299","severity":1,"message":"324","line":5,"column":154,"nodeType":"301","messageId":"302","endLine":5,"endColumn":168},{"ruleId":"299","severity":1,"message":"325","line":10,"column":8,"nodeType":"301","messageId":"302","endLine":10,"endColumn":16},{"ruleId":"299","severity":1,"message":"326","line":11,"column":10,"nodeType":"301","messageId":"302","endLine":11,"endColumn":23},{"ruleId":"309","severity":1,"message":"327","line":47,"column":57,"nodeType":"311","messageId":"312","endLine":47,"endColumn":59},{"ruleId":"309","severity":1,"message":"310","line":54,"column":42,"nodeType":"311","messageId":"312","endLine":54,"endColumn":44},{"ruleId":"309","severity":1,"message":"327","line":54,"column":129,"nodeType":"311","messageId":"312","endLine":54,"endColumn":131},{"ruleId":"309","severity":1,"message":"310","line":62,"column":28,"nodeType":"311","messageId":"312","endLine":62,"endColumn":30},{"ruleId":"299","severity":1,"message":"328","line":111,"column":13,"nodeType":"301","messageId":"302","endLine":111,"endColumn":17},{"ruleId":"299","severity":1,"message":"329","line":113,"column":17,"nodeType":"301","messageId":"302","endLine":113,"endColumn":19},{"ruleId":"309","severity":1,"message":"310","line":120,"column":44,"nodeType":"311","messageId":"312","endLine":120,"endColumn":46},{"ruleId":"309","severity":1,"message":"310","line":124,"column":289,"nodeType":"311","messageId":"312","endLine":124,"endColumn":291},{"ruleId":"330","severity":1,"message":"331","line":124,"column":464,"nodeType":"311","messageId":"332","endLine":124,"endColumn":465},{"ruleId":"309","severity":1,"message":"310","line":137,"column":42,"nodeType":"311","messageId":"312","endLine":137,"endColumn":44},{"ruleId":"309","severity":1,"message":"310","line":211,"column":47,"nodeType":"311","messageId":"312","endLine":211,"endColumn":49},{"ruleId":"299","severity":1,"message":"306","line":5,"column":24,"nodeType":"301","messageId":"302","endLine":5,"endColumn":28},{"ruleId":"299","severity":1,"message":"317","line":5,"column":41,"nodeType":"301","messageId":"302","endLine":5,"endColumn":50},{"ruleId":"299","severity":1,"message":"318","line":5,"column":52,"nodeType":"301","messageId":"302","endLine":5,"endColumn":65},{"ruleId":"299","severity":1,"message":"333","line":5,"column":67,"nodeType":"301","messageId":"302","endLine":5,"endColumn":72},{"ruleId":"299","severity":1,"message":"319","line":5,"column":74,"nodeType":"301","messageId":"302","endLine":5,"endColumn":78},{"ruleId":"299","severity":1,"message":"322","line":5,"column":134,"nodeType":"301","messageId":"302","endLine":5,"endColumn":137},{"ruleId":"299","severity":1,"message":"334","line":5,"column":139,"nodeType":"301","messageId":"302","endLine":5,"endColumn":142},{"ruleId":"309","severity":1,"message":"327","line":30,"column":33,"nodeType":"311","messageId":"312","endLine":30,"endColumn":35},{"ruleId":"295","replacedBy":"335"},{"ruleId":"297","replacedBy":"336"},{"ruleId":"299","severity":1,"message":"307","line":4,"column":24,"nodeType":"301","messageId":"302","endLine":4,"endColumn":33},{"ruleId":"299","severity":1,"message":"308","line":4,"column":58,"nodeType":"301","messageId":"302","endLine":4,"endColumn":63},{"ruleId":"299","severity":1,"message":"306","line":4,"column":65,"nodeType":"301","messageId":"302","endLine":4,"endColumn":69},{"ruleId":"309","severity":1,"message":"327","line":41,"column":57,"nodeType":"311","messageId":"312","endLine":41,"endColumn":59},{"ruleId":"309","severity":1,"message":"310","line":42,"column":33,"nodeType":"311","messageId":"312","endLine":42,"endColumn":35},{"ruleId":"309","severity":1,"message":"310","line":62,"column":29,"nodeType":"311","messageId":"312","endLine":62,"endColumn":31},{"ruleId":"309","severity":1,"message":"310","line":65,"column":150,"nodeType":"311","messageId":"312","endLine":65,"endColumn":152},{"ruleId":"337","severity":1,"message":"338","line":71,"column":46,"nodeType":"339","messageId":"340","endLine":71,"endColumn":47,"suggestions":"341"},{"ruleId":"337","severity":1,"message":"338","line":71,"column":76,"nodeType":"339","messageId":"340","endLine":71,"endColumn":77,"suggestions":"342"},{"ruleId":"309","severity":1,"message":"310","line":74,"column":32,"nodeType":"311","messageId":"312","endLine":74,"endColumn":34},{"ruleId":"309","severity":1,"message":"310","line":95,"column":33,"nodeType":"311","messageId":"312","endLine":95,"endColumn":35},{"ruleId":"309","severity":1,"message":"310","line":117,"column":55,"nodeType":"311","messageId":"312","endLine":117,"endColumn":57},{"ruleId":"309","severity":1,"message":"310","line":134,"column":36,"nodeType":"311","messageId":"312","endLine":134,"endColumn":38},{"ruleId":"309","severity":1,"message":"327","line":143,"column":27,"nodeType":"311","messageId":"312","endLine":143,"endColumn":29},{"ruleId":"309","severity":1,"message":"310","line":163,"column":44,"nodeType":"311","messageId":"312","endLine":163,"endColumn":46},{"ruleId":"309","severity":1,"message":"327","line":172,"column":31,"nodeType":"311","messageId":"312","endLine":172,"endColumn":33},{"ruleId":"309","severity":1,"message":"310","line":193,"column":45,"nodeType":"311","messageId":"312","endLine":193,"endColumn":47},{"ruleId":"309","severity":1,"message":"310","line":196,"column":132,"nodeType":"311","messageId":"312","endLine":196,"endColumn":134},{"ruleId":"309","severity":1,"message":"310","line":205,"column":29,"nodeType":"311","messageId":"312","endLine":205,"endColumn":31},{"ruleId":"299","severity":1,"message":"307","line":4,"column":24,"nodeType":"301","messageId":"302","endLine":4,"endColumn":33},{"ruleId":"299","severity":1,"message":"308","line":4,"column":58,"nodeType":"301","messageId":"302","endLine":4,"endColumn":63},{"ruleId":"299","severity":1,"message":"306","line":4,"column":65,"nodeType":"301","messageId":"302","endLine":4,"endColumn":69},{"ruleId":"309","severity":1,"message":"327","line":29,"column":82,"nodeType":"311","messageId":"312","endLine":29,"endColumn":84},{"ruleId":"309","severity":1,"message":"310","line":37,"column":34,"nodeType":"311","messageId":"312","endLine":37,"endColumn":36},{"ruleId":"337","severity":1,"message":"338","line":40,"column":46,"nodeType":"339","messageId":"340","endLine":40,"endColumn":47,"suggestions":"343"},{"ruleId":"337","severity":1,"message":"338","line":40,"column":76,"nodeType":"339","messageId":"340","endLine":40,"endColumn":77,"suggestions":"344"},{"ruleId":"337","severity":1,"message":"338","line":49,"column":42,"nodeType":"339","messageId":"340","endLine":49,"endColumn":43,"suggestions":"345"},{"ruleId":"337","severity":1,"message":"338","line":49,"column":72,"nodeType":"339","messageId":"340","endLine":49,"endColumn":73,"suggestions":"346"},{"ruleId":"309","severity":1,"message":"327","line":58,"column":56,"nodeType":"311","messageId":"312","endLine":58,"endColumn":58},{"ruleId":"309","severity":1,"message":"327","line":58,"column":87,"nodeType":"311","messageId":"312","endLine":58,"endColumn":89},{"ruleId":"347","severity":1,"message":"348","line":63,"column":13,"nodeType":"349","endLine":63,"endColumn":23},{"ruleId":"309","severity":1,"message":"310","line":65,"column":34,"nodeType":"311","messageId":"312","endLine":65,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":66,"column":13,"nodeType":"349","endLine":66,"endColumn":23},{"ruleId":"309","severity":1,"message":"310","line":68,"column":39,"nodeType":"311","messageId":"312","endLine":68,"endColumn":41},{"ruleId":"347","severity":1,"message":"348","line":69,"column":13,"nodeType":"349","endLine":69,"endColumn":23},{"ruleId":"309","severity":1,"message":"310","line":99,"column":38,"nodeType":"311","messageId":"312","endLine":99,"endColumn":40},{"ruleId":"309","severity":1,"message":"310","line":125,"column":55,"nodeType":"311","messageId":"312","endLine":125,"endColumn":57},{"ruleId":"309","severity":1,"message":"310","line":147,"column":40,"nodeType":"311","messageId":"312","endLine":147,"endColumn":42},{"ruleId":"309","severity":1,"message":"327","line":156,"column":27,"nodeType":"311","messageId":"312","endLine":156,"endColumn":29},{"ruleId":"309","severity":1,"message":"310","line":176,"column":44,"nodeType":"311","messageId":"312","endLine":176,"endColumn":46},{"ruleId":"309","severity":1,"message":"327","line":185,"column":31,"nodeType":"311","messageId":"312","endLine":185,"endColumn":33},{"ruleId":"309","severity":1,"message":"310","line":206,"column":45,"nodeType":"311","messageId":"312","endLine":206,"endColumn":47},{"ruleId":"309","severity":1,"message":"310","line":209,"column":132,"nodeType":"311","messageId":"312","endLine":209,"endColumn":134},{"ruleId":"309","severity":1,"message":"310","line":230,"column":43,"nodeType":"311","messageId":"312","endLine":230,"endColumn":45},{"ruleId":"309","severity":1,"message":"310","line":240,"column":47,"nodeType":"311","messageId":"312","endLine":240,"endColumn":49},{"ruleId":"309","severity":1,"message":"327","line":346,"column":47,"nodeType":"311","messageId":"312","endLine":346,"endColumn":49},{"ruleId":"299","severity":1,"message":"307","line":2,"column":24,"nodeType":"301","messageId":"302","endLine":2,"endColumn":33},{"ruleId":"299","severity":1,"message":"308","line":2,"column":35,"nodeType":"301","messageId":"302","endLine":2,"endColumn":40},{"ruleId":"299","severity":1,"message":"350","line":3,"column":8,"nodeType":"301","messageId":"302","endLine":3,"endColumn":13},{"ruleId":"309","severity":1,"message":"310","line":26,"column":64,"nodeType":"311","messageId":"312","endLine":26,"endColumn":66},{"ruleId":"309","severity":1,"message":"310","line":26,"column":100,"nodeType":"311","messageId":"312","endLine":26,"endColumn":102},{"ruleId":"299","severity":1,"message":"307","line":4,"column":24,"nodeType":"301","messageId":"302","endLine":4,"endColumn":33},{"ruleId":"299","severity":1,"message":"308","line":4,"column":51,"nodeType":"301","messageId":"302","endLine":4,"endColumn":56},{"ruleId":"299","severity":1,"message":"306","line":4,"column":58,"nodeType":"301","messageId":"302","endLine":4,"endColumn":62},{"ruleId":"337","severity":1,"message":"338","line":31,"column":42,"nodeType":"339","messageId":"340","endLine":31,"endColumn":43,"suggestions":"351"},{"ruleId":"337","severity":1,"message":"338","line":31,"column":72,"nodeType":"339","messageId":"340","endLine":31,"endColumn":73,"suggestions":"352"},{"ruleId":"309","severity":1,"message":"310","line":64,"column":44,"nodeType":"311","messageId":"312","endLine":64,"endColumn":46},{"ruleId":"309","severity":1,"message":"310","line":83,"column":44,"nodeType":"311","messageId":"312","endLine":83,"endColumn":46},{"ruleId":"309","severity":1,"message":"327","line":92,"column":31,"nodeType":"311","messageId":"312","endLine":92,"endColumn":33},{"ruleId":"309","severity":1,"message":"310","line":111,"column":40,"nodeType":"311","messageId":"312","endLine":111,"endColumn":42},{"ruleId":"309","severity":1,"message":"327","line":120,"column":27,"nodeType":"311","messageId":"312","endLine":120,"endColumn":29},{"ruleId":"299","severity":1,"message":"353","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":16},{"ruleId":"299","severity":1,"message":"316","line":4,"column":18,"nodeType":"301","messageId":"302","endLine":4,"endColumn":22},{"ruleId":"299","severity":1,"message":"307","line":4,"column":31,"nodeType":"301","messageId":"302","endLine":4,"endColumn":40},{"ruleId":"299","severity":1,"message":"334","line":4,"column":42,"nodeType":"301","messageId":"302","endLine":4,"endColumn":45},{"ruleId":"299","severity":1,"message":"308","line":4,"column":58,"nodeType":"301","messageId":"302","endLine":4,"endColumn":63},{"ruleId":"299","severity":1,"message":"306","line":4,"column":65,"nodeType":"301","messageId":"302","endLine":4,"endColumn":69},{"ruleId":"299","severity":1,"message":"354","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":13},{"ruleId":"309","severity":1,"message":"310","line":38,"column":40,"nodeType":"311","messageId":"312","endLine":38,"endColumn":42},{"ruleId":"309","severity":1,"message":"310","line":47,"column":213,"nodeType":"311","messageId":"312","endLine":47,"endColumn":215},{"ruleId":"337","severity":1,"message":"338","line":47,"column":425,"nodeType":"339","messageId":"340","endLine":47,"endColumn":426,"suggestions":"355"},{"ruleId":"337","severity":1,"message":"338","line":47,"column":449,"nodeType":"339","messageId":"340","endLine":47,"endColumn":450,"suggestions":"356"},{"ruleId":"337","severity":1,"message":"338","line":47,"column":457,"nodeType":"339","messageId":"340","endLine":47,"endColumn":458,"suggestions":"357"},{"ruleId":"337","severity":1,"message":"338","line":47,"column":465,"nodeType":"339","messageId":"340","endLine":47,"endColumn":466,"suggestions":"358"},{"ruleId":"337","severity":1,"message":"338","line":49,"column":57,"nodeType":"339","messageId":"340","endLine":49,"endColumn":58,"suggestions":"359"},{"ruleId":"337","severity":1,"message":"338","line":49,"column":65,"nodeType":"339","messageId":"340","endLine":49,"endColumn":66,"suggestions":"360"},{"ruleId":"337","severity":1,"message":"338","line":49,"column":71,"nodeType":"339","messageId":"340","endLine":49,"endColumn":72,"suggestions":"361"},{"ruleId":"337","severity":1,"message":"338","line":49,"column":95,"nodeType":"339","messageId":"340","endLine":49,"endColumn":96,"suggestions":"362"},{"ruleId":"337","severity":1,"message":"338","line":49,"column":104,"nodeType":"339","messageId":"340","endLine":49,"endColumn":105,"suggestions":"363"},{"ruleId":"337","severity":1,"message":"338","line":49,"column":119,"nodeType":"339","messageId":"340","endLine":49,"endColumn":120,"suggestions":"364"},{"ruleId":"309","severity":1,"message":"310","line":102,"column":40,"nodeType":"311","messageId":"312","endLine":102,"endColumn":42},{"ruleId":"309","severity":1,"message":"310","line":107,"column":62,"nodeType":"311","messageId":"312","endLine":107,"endColumn":64},{"ruleId":"309","severity":1,"message":"310","line":127,"column":62,"nodeType":"311","messageId":"312","endLine":127,"endColumn":64},{"ruleId":"309","severity":1,"message":"310","line":131,"column":67,"nodeType":"311","messageId":"312","endLine":131,"endColumn":69},{"ruleId":"309","severity":1,"message":"310","line":135,"column":67,"nodeType":"311","messageId":"312","endLine":135,"endColumn":69},{"ruleId":"309","severity":1,"message":"310","line":172,"column":35,"nodeType":"311","messageId":"312","endLine":172,"endColumn":37},{"ruleId":"309","severity":1,"message":"310","line":182,"column":44,"nodeType":"311","messageId":"312","endLine":182,"endColumn":46},{"ruleId":"309","severity":1,"message":"310","line":193,"column":66,"nodeType":"311","messageId":"312","endLine":193,"endColumn":68},{"ruleId":"309","severity":1,"message":"310","line":213,"column":66,"nodeType":"311","messageId":"312","endLine":213,"endColumn":68},{"ruleId":"309","severity":1,"message":"310","line":217,"column":71,"nodeType":"311","messageId":"312","endLine":217,"endColumn":73},{"ruleId":"309","severity":1,"message":"310","line":221,"column":71,"nodeType":"311","messageId":"312","endLine":221,"endColumn":73},{"ruleId":"309","severity":1,"message":"310","line":247,"column":71,"nodeType":"311","messageId":"312","endLine":247,"endColumn":73},{"ruleId":"309","severity":1,"message":"327","line":291,"column":45,"nodeType":"311","messageId":"312","endLine":291,"endColumn":47},{"ruleId":"309","severity":1,"message":"310","line":296,"column":45,"nodeType":"311","messageId":"312","endLine":296,"endColumn":47},{"ruleId":"309","severity":1,"message":"310","line":296,"column":76,"nodeType":"311","messageId":"312","endLine":296,"endColumn":78},{"ruleId":"309","severity":1,"message":"310","line":296,"column":110,"nodeType":"311","messageId":"312","endLine":296,"endColumn":112},{"ruleId":"309","severity":1,"message":"310","line":298,"column":56,"nodeType":"311","messageId":"312","endLine":298,"endColumn":58},{"ruleId":"309","severity":1,"message":"310","line":298,"column":100,"nodeType":"311","messageId":"312","endLine":298,"endColumn":102},{"ruleId":"299","severity":1,"message":"307","line":4,"column":24,"nodeType":"301","messageId":"302","endLine":4,"endColumn":33},{"ruleId":"299","severity":1,"message":"334","line":4,"column":35,"nodeType":"301","messageId":"302","endLine":4,"endColumn":38},{"ruleId":"299","severity":1,"message":"323","line":4,"column":51,"nodeType":"301","messageId":"302","endLine":4,"endColumn":59},{"ruleId":"299","severity":1,"message":"324","line":4,"column":74,"nodeType":"301","messageId":"302","endLine":4,"endColumn":88},{"ruleId":"299","severity":1,"message":"365","line":4,"column":109,"nodeType":"301","messageId":"302","endLine":4,"endColumn":120},{"ruleId":"299","severity":1,"message":"308","line":4,"column":122,"nodeType":"301","messageId":"302","endLine":4,"endColumn":127},{"ruleId":"299","severity":1,"message":"306","line":4,"column":129,"nodeType":"301","messageId":"302","endLine":4,"endColumn":133},{"ruleId":"299","severity":1,"message":"366","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":14},{"ruleId":"299","severity":1,"message":"326","line":6,"column":10,"nodeType":"301","messageId":"302","endLine":6,"endColumn":23},{"ruleId":"309","severity":1,"message":"310","line":47,"column":44,"nodeType":"311","messageId":"312","endLine":47,"endColumn":46},{"ruleId":"309","severity":1,"message":"310","line":72,"column":79,"nodeType":"311","messageId":"312","endLine":72,"endColumn":81},{"ruleId":"309","severity":1,"message":"310","line":76,"column":67,"nodeType":"311","messageId":"312","endLine":76,"endColumn":69},{"ruleId":"309","severity":1,"message":"310","line":78,"column":72,"nodeType":"311","messageId":"312","endLine":78,"endColumn":74},{"ruleId":"309","severity":1,"message":"310","line":81,"column":72,"nodeType":"311","messageId":"312","endLine":81,"endColumn":74},{"ruleId":"309","severity":1,"message":"310","line":84,"column":72,"nodeType":"311","messageId":"312","endLine":84,"endColumn":74},{"ruleId":"309","severity":1,"message":"310","line":87,"column":72,"nodeType":"311","messageId":"312","endLine":87,"endColumn":74},{"ruleId":"309","severity":1,"message":"310","line":90,"column":72,"nodeType":"311","messageId":"312","endLine":90,"endColumn":74},{"ruleId":"309","severity":1,"message":"327","line":110,"column":26,"nodeType":"311","messageId":"312","endLine":110,"endColumn":28},{"ruleId":"309","severity":1,"message":"327","line":123,"column":53,"nodeType":"311","messageId":"312","endLine":123,"endColumn":55},{"ruleId":"309","severity":1,"message":"327","line":123,"column":170,"nodeType":"311","messageId":"312","endLine":123,"endColumn":172},{"ruleId":"309","severity":1,"message":"327","line":125,"column":58,"nodeType":"311","messageId":"312","endLine":125,"endColumn":60},{"ruleId":"309","severity":1,"message":"327","line":125,"column":175,"nodeType":"311","messageId":"312","endLine":125,"endColumn":177},{"ruleId":"309","severity":1,"message":"310","line":136,"column":26,"nodeType":"311","messageId":"312","endLine":136,"endColumn":28},{"ruleId":"309","severity":1,"message":"310","line":159,"column":67,"nodeType":"311","messageId":"312","endLine":159,"endColumn":69},{"ruleId":"309","severity":1,"message":"310","line":163,"column":55,"nodeType":"311","messageId":"312","endLine":163,"endColumn":57},{"ruleId":"309","severity":1,"message":"310","line":165,"column":60,"nodeType":"311","messageId":"312","endLine":165,"endColumn":62},{"ruleId":"309","severity":1,"message":"310","line":168,"column":60,"nodeType":"311","messageId":"312","endLine":168,"endColumn":62},{"ruleId":"309","severity":1,"message":"310","line":171,"column":60,"nodeType":"311","messageId":"312","endLine":171,"endColumn":62},{"ruleId":"309","severity":1,"message":"310","line":174,"column":60,"nodeType":"311","messageId":"312","endLine":174,"endColumn":62},{"ruleId":"309","severity":1,"message":"310","line":177,"column":60,"nodeType":"311","messageId":"312","endLine":177,"endColumn":62},{"ruleId":"309","severity":1,"message":"310","line":195,"column":56,"nodeType":"311","messageId":"312","endLine":195,"endColumn":58},{"ruleId":"309","severity":1,"message":"327","line":196,"column":125,"nodeType":"311","messageId":"312","endLine":196,"endColumn":127},{"ruleId":"309","severity":1,"message":"327","line":258,"column":56,"nodeType":"311","messageId":"312","endLine":258,"endColumn":58},{"ruleId":"309","severity":1,"message":"310","line":276,"column":62,"nodeType":"311","messageId":"312","endLine":276,"endColumn":64},{"ruleId":"309","severity":1,"message":"310","line":280,"column":62,"nodeType":"311","messageId":"312","endLine":280,"endColumn":64},{"ruleId":"309","severity":1,"message":"310","line":284,"column":64,"nodeType":"311","messageId":"312","endLine":284,"endColumn":66},{"ruleId":"309","severity":1,"message":"310","line":288,"column":79,"nodeType":"311","messageId":"312","endLine":288,"endColumn":81},{"ruleId":"309","severity":1,"message":"310","line":314,"column":51,"nodeType":"311","messageId":"312","endLine":314,"endColumn":53},{"ruleId":"309","severity":1,"message":"310","line":314,"column":84,"nodeType":"311","messageId":"312","endLine":314,"endColumn":86},{"ruleId":"299","severity":1,"message":"307","line":4,"column":24,"nodeType":"301","messageId":"302","endLine":4,"endColumn":33},{"ruleId":"299","severity":1,"message":"308","line":4,"column":51,"nodeType":"301","messageId":"302","endLine":4,"endColumn":56},{"ruleId":"299","severity":1,"message":"306","line":4,"column":58,"nodeType":"301","messageId":"302","endLine":4,"endColumn":62},{"ruleId":"309","severity":1,"message":"327","line":29,"column":56,"nodeType":"311","messageId":"312","endLine":29,"endColumn":58},{"ruleId":"309","severity":1,"message":"327","line":29,"column":87,"nodeType":"311","messageId":"312","endLine":29,"endColumn":89},{"ruleId":"347","severity":1,"message":"348","line":34,"column":13,"nodeType":"349","endLine":34,"endColumn":23},{"ruleId":"309","severity":1,"message":"310","line":36,"column":34,"nodeType":"311","messageId":"312","endLine":36,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":37,"column":13,"nodeType":"349","endLine":37,"endColumn":23},{"ruleId":"309","severity":1,"message":"310","line":39,"column":39,"nodeType":"311","messageId":"312","endLine":39,"endColumn":41},{"ruleId":"347","severity":1,"message":"348","line":40,"column":13,"nodeType":"349","endLine":40,"endColumn":23},{"ruleId":"309","severity":1,"message":"310","line":87,"column":51,"nodeType":"311","messageId":"312","endLine":87,"endColumn":53},{"ruleId":"299","severity":1,"message":"350","line":3,"column":8,"nodeType":"301","messageId":"302","endLine":3,"endColumn":13},{"ruleId":"295","replacedBy":"367"},{"ruleId":"297","replacedBy":"368"},{"ruleId":"299","severity":1,"message":"353","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":16},{"ruleId":"299","severity":1,"message":"316","line":4,"column":18,"nodeType":"301","messageId":"302","endLine":4,"endColumn":22},{"ruleId":"299","severity":1,"message":"307","line":4,"column":31,"nodeType":"301","messageId":"302","endLine":4,"endColumn":40},{"ruleId":"299","severity":1,"message":"334","line":4,"column":42,"nodeType":"301","messageId":"302","endLine":4,"endColumn":45},{"ruleId":"299","severity":1,"message":"308","line":4,"column":58,"nodeType":"301","messageId":"302","endLine":4,"endColumn":63},{"ruleId":"299","severity":1,"message":"306","line":4,"column":65,"nodeType":"301","messageId":"302","endLine":4,"endColumn":69},{"ruleId":"299","severity":1,"message":"354","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":13},{"ruleId":"299","severity":1,"message":"328","line":23,"column":13,"nodeType":"301","messageId":"302","endLine":23,"endColumn":17},{"ruleId":"299","severity":1,"message":"369","line":81,"column":17,"nodeType":"301","messageId":"302","endLine":81,"endColumn":20},{"ruleId":"309","severity":1,"message":"310","line":87,"column":70,"nodeType":"311","messageId":"312","endLine":87,"endColumn":72},"no-native-reassign",["370"],"no-negated-in-lhs",["371"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.",["370"],["371"],"'Card' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Form' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Text' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Row' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'ApplyJob' is defined but never used.","'ThemeConsumer' is defined but never used.","Expected '!==' and instead saw '!='.","'self' is assigned a value but never used.","'tm' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Image' is defined but never used.","'Col' is defined but never used.",["370"],["371"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["372","373"],["374","375"],["376","377"],["378","379"],["380","381"],["382","383"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'axios' is defined but never used.",["384","385"],["386","387"],"'Button' is defined but never used.","'Popup' is defined but never used.",["388","389"],["390","391"],["392","393"],["394","395"],["396","397"],["398","399"],["400","401"],["402","403"],["404","405"],["406","407"],"'ButtonGroup' is defined but never used.","'Parser' is defined but never used.",["370"],["371"],"'nos' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"408","fix":"409","desc":"410"},{"messageId":"411","fix":"412","desc":"413"},{"messageId":"408","fix":"414","desc":"410"},{"messageId":"411","fix":"415","desc":"413"},{"messageId":"408","fix":"416","desc":"410"},{"messageId":"411","fix":"417","desc":"413"},{"messageId":"408","fix":"418","desc":"410"},{"messageId":"411","fix":"419","desc":"413"},{"messageId":"408","fix":"420","desc":"410"},{"messageId":"411","fix":"421","desc":"413"},{"messageId":"408","fix":"422","desc":"410"},{"messageId":"411","fix":"423","desc":"413"},{"messageId":"408","fix":"424","desc":"410"},{"messageId":"411","fix":"425","desc":"413"},{"messageId":"408","fix":"426","desc":"410"},{"messageId":"411","fix":"427","desc":"413"},{"messageId":"408","fix":"428","desc":"410"},{"messageId":"411","fix":"429","desc":"413"},{"messageId":"408","fix":"430","desc":"410"},{"messageId":"411","fix":"431","desc":"413"},{"messageId":"408","fix":"432","desc":"410"},{"messageId":"411","fix":"433","desc":"413"},{"messageId":"408","fix":"434","desc":"410"},{"messageId":"411","fix":"435","desc":"413"},{"messageId":"408","fix":"436","desc":"410"},{"messageId":"411","fix":"437","desc":"413"},{"messageId":"408","fix":"438","desc":"410"},{"messageId":"411","fix":"439","desc":"413"},{"messageId":"408","fix":"440","desc":"410"},{"messageId":"411","fix":"441","desc":"413"},{"messageId":"408","fix":"442","desc":"410"},{"messageId":"411","fix":"443","desc":"413"},{"messageId":"408","fix":"444","desc":"410"},{"messageId":"411","fix":"445","desc":"413"},{"messageId":"408","fix":"446","desc":"410"},{"messageId":"411","fix":"447","desc":"413"},"removeEscape",{"range":"448","text":"449"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"450","text":"451"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"452","text":"449"},{"range":"453","text":"451"},{"range":"454","text":"449"},{"range":"455","text":"451"},{"range":"456","text":"449"},{"range":"457","text":"451"},{"range":"458","text":"449"},{"range":"459","text":"451"},{"range":"460","text":"449"},{"range":"461","text":"451"},{"range":"462","text":"449"},{"range":"463","text":"451"},{"range":"464","text":"449"},{"range":"465","text":"451"},{"range":"466","text":"449"},{"range":"467","text":"451"},{"range":"468","text":"449"},{"range":"469","text":"451"},{"range":"470","text":"449"},{"range":"471","text":"451"},{"range":"472","text":"449"},{"range":"473","text":"451"},{"range":"474","text":"449"},{"range":"475","text":"451"},{"range":"476","text":"449"},{"range":"477","text":"451"},{"range":"478","text":"449"},{"range":"479","text":"451"},{"range":"480","text":"449"},{"range":"481","text":"451"},{"range":"482","text":"449"},{"range":"483","text":"451"},{"range":"484","text":"449"},{"range":"485","text":"451"},[2541,2542],"",[2541,2541],"\\",[2571,2572],[2571,2571],[1287,1288],[1287,1287],[1317,1318],[1317,1317],[1600,1601],[1600,1600],[1630,1631],[1630,1630],[1035,1036],[1035,1035],[1065,1066],[1065,1065],[1935,1936],[1935,1935],[1959,1960],[1959,1959],[1967,1968],[1967,1967],[1975,1976],[1975,1975],[2162,2163],[2162,2162],[2170,2171],[2170,2170],[2176,2177],[2176,2176],[2200,2201],[2200,2200],[2209,2210],[2209,2209],[2224,2225],[2224,2224]]